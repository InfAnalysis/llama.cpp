# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.31

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: llama.cpp
# Configurations: Release
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Release
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /Users/hertz/github_projects/llama.cpp/build/

#############################################
# Utility command for Experimental

build Experimental: phony CMakeFiles/Experimental


#############################################
# Utility command for Nightly

build Nightly: phony CMakeFiles/Nightly


#############################################
# Utility command for Continuous

build Continuous: phony CMakeFiles/Continuous


#############################################
# Utility command for NightlyMemoryCheck

build NightlyMemoryCheck: phony CMakeFiles/NightlyMemoryCheck


#############################################
# Utility command for NightlyStart

build NightlyStart: phony CMakeFiles/NightlyStart


#############################################
# Utility command for NightlyUpdate

build NightlyUpdate: phony CMakeFiles/NightlyUpdate


#############################################
# Utility command for NightlyConfigure

build NightlyConfigure: phony CMakeFiles/NightlyConfigure


#############################################
# Utility command for NightlyBuild

build NightlyBuild: phony CMakeFiles/NightlyBuild


#############################################
# Utility command for NightlyTest

build NightlyTest: phony CMakeFiles/NightlyTest


#############################################
# Utility command for NightlyCoverage

build NightlyCoverage: phony CMakeFiles/NightlyCoverage


#############################################
# Utility command for NightlyMemCheck

build NightlyMemCheck: phony CMakeFiles/NightlyMemCheck


#############################################
# Utility command for NightlySubmit

build NightlySubmit: phony CMakeFiles/NightlySubmit


#############################################
# Utility command for ExperimentalStart

build ExperimentalStart: phony CMakeFiles/ExperimentalStart


#############################################
# Utility command for ExperimentalUpdate

build ExperimentalUpdate: phony CMakeFiles/ExperimentalUpdate


#############################################
# Utility command for ExperimentalConfigure

build ExperimentalConfigure: phony CMakeFiles/ExperimentalConfigure


#############################################
# Utility command for ExperimentalBuild

build ExperimentalBuild: phony CMakeFiles/ExperimentalBuild


#############################################
# Utility command for ExperimentalTest

build ExperimentalTest: phony CMakeFiles/ExperimentalTest


#############################################
# Utility command for ExperimentalCoverage

build ExperimentalCoverage: phony CMakeFiles/ExperimentalCoverage


#############################################
# Utility command for ExperimentalMemCheck

build ExperimentalMemCheck: phony CMakeFiles/ExperimentalMemCheck


#############################################
# Utility command for ExperimentalSubmit

build ExperimentalSubmit: phony CMakeFiles/ExperimentalSubmit


#############################################
# Utility command for ContinuousStart

build ContinuousStart: phony CMakeFiles/ContinuousStart


#############################################
# Utility command for ContinuousUpdate

build ContinuousUpdate: phony CMakeFiles/ContinuousUpdate


#############################################
# Utility command for ContinuousConfigure

build ContinuousConfigure: phony CMakeFiles/ContinuousConfigure


#############################################
# Utility command for ContinuousBuild

build ContinuousBuild: phony CMakeFiles/ContinuousBuild


#############################################
# Utility command for ContinuousTest

build ContinuousTest: phony CMakeFiles/ContinuousTest


#############################################
# Utility command for ContinuousCoverage

build ContinuousCoverage: phony CMakeFiles/ContinuousCoverage


#############################################
# Utility command for ContinuousMemCheck

build ContinuousMemCheck: phony CMakeFiles/ContinuousMemCheck


#############################################
# Utility command for ContinuousSubmit

build ContinuousSubmit: phony CMakeFiles/ContinuousSubmit


#############################################
# Utility command for test

build CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build test: phony CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build list_install_components: phony


#############################################
# Utility command for install

build CMakeFiles/install.util: CUSTOM_COMMAND all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build install: phony CMakeFiles/install.util


#############################################
# Utility command for install/local

build CMakeFiles/install/local.util: CUSTOM_COMMAND all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build install/local: phony CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build CMakeFiles/install/strip.util: CUSTOM_COMMAND all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build install/strip: phony CMakeFiles/install/strip.util


#############################################
# Custom command for CMakeFiles/Experimental

build CMakeFiles/Experimental | ${cmake_ninja_workdir}CMakeFiles/Experimental: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D Experimental
  pool = console


#############################################
# Custom command for CMakeFiles/Nightly

build CMakeFiles/Nightly | ${cmake_ninja_workdir}CMakeFiles/Nightly: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D Nightly
  pool = console


#############################################
# Custom command for CMakeFiles/Continuous

build CMakeFiles/Continuous | ${cmake_ninja_workdir}CMakeFiles/Continuous: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D Continuous
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyMemoryCheck

build CMakeFiles/NightlyMemoryCheck | ${cmake_ninja_workdir}CMakeFiles/NightlyMemoryCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyMemoryCheck
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyStart

build CMakeFiles/NightlyStart | ${cmake_ninja_workdir}CMakeFiles/NightlyStart: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyStart
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyUpdate

build CMakeFiles/NightlyUpdate | ${cmake_ninja_workdir}CMakeFiles/NightlyUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyUpdate
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyConfigure

build CMakeFiles/NightlyConfigure | ${cmake_ninja_workdir}CMakeFiles/NightlyConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyConfigure
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyBuild

build CMakeFiles/NightlyBuild | ${cmake_ninja_workdir}CMakeFiles/NightlyBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyBuild
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyTest

build CMakeFiles/NightlyTest | ${cmake_ninja_workdir}CMakeFiles/NightlyTest: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyTest
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyCoverage

build CMakeFiles/NightlyCoverage | ${cmake_ninja_workdir}CMakeFiles/NightlyCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyCoverage
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyMemCheck

build CMakeFiles/NightlyMemCheck | ${cmake_ninja_workdir}CMakeFiles/NightlyMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlyMemCheck
  pool = console


#############################################
# Custom command for CMakeFiles/NightlySubmit

build CMakeFiles/NightlySubmit | ${cmake_ninja_workdir}CMakeFiles/NightlySubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D NightlySubmit
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalStart

build CMakeFiles/ExperimentalStart | ${cmake_ninja_workdir}CMakeFiles/ExperimentalStart: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalStart
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalUpdate

build CMakeFiles/ExperimentalUpdate | ${cmake_ninja_workdir}CMakeFiles/ExperimentalUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalUpdate
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalConfigure

build CMakeFiles/ExperimentalConfigure | ${cmake_ninja_workdir}CMakeFiles/ExperimentalConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalConfigure
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalBuild

build CMakeFiles/ExperimentalBuild | ${cmake_ninja_workdir}CMakeFiles/ExperimentalBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalBuild
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalTest

build CMakeFiles/ExperimentalTest | ${cmake_ninja_workdir}CMakeFiles/ExperimentalTest: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalTest
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalCoverage

build CMakeFiles/ExperimentalCoverage | ${cmake_ninja_workdir}CMakeFiles/ExperimentalCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalCoverage
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalMemCheck

build CMakeFiles/ExperimentalMemCheck | ${cmake_ninja_workdir}CMakeFiles/ExperimentalMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalMemCheck
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalSubmit

build CMakeFiles/ExperimentalSubmit | ${cmake_ninja_workdir}CMakeFiles/ExperimentalSubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ExperimentalSubmit
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousStart

build CMakeFiles/ContinuousStart | ${cmake_ninja_workdir}CMakeFiles/ContinuousStart: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousStart
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousUpdate

build CMakeFiles/ContinuousUpdate | ${cmake_ninja_workdir}CMakeFiles/ContinuousUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousUpdate
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousConfigure

build CMakeFiles/ContinuousConfigure | ${cmake_ninja_workdir}CMakeFiles/ContinuousConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousConfigure
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousBuild

build CMakeFiles/ContinuousBuild | ${cmake_ninja_workdir}CMakeFiles/ContinuousBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousBuild
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousTest

build CMakeFiles/ContinuousTest | ${cmake_ninja_workdir}CMakeFiles/ContinuousTest: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousTest
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousCoverage

build CMakeFiles/ContinuousCoverage | ${cmake_ninja_workdir}CMakeFiles/ContinuousCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousCoverage
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousMemCheck

build CMakeFiles/ContinuousMemCheck | ${cmake_ninja_workdir}CMakeFiles/ContinuousMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousMemCheck
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousSubmit

build CMakeFiles/ContinuousSubmit | ${cmake_ninja_workdir}CMakeFiles/ContinuousSubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build && /opt/homebrew/bin/ctest -D ContinuousSubmit
  pool = console

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for test

build ggml/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build ggml/test: phony ggml/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build ggml/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build ggml/edit_cache: phony ggml/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build ggml/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build ggml/rebuild_cache: phony ggml/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build ggml/list_install_components: phony


#############################################
# Utility command for install

build ggml/CMakeFiles/install.util: CUSTOM_COMMAND ggml/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build ggml/install: phony ggml/CMakeFiles/install.util


#############################################
# Utility command for install/local

build ggml/CMakeFiles/install/local.util: CUSTOM_COMMAND ggml/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build ggml/install/local: phony ggml/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build ggml/CMakeFiles/install/strip.util: CUSTOM_COMMAND ggml/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build ggml/install/strip: phony ggml/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/ggml/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for SHARED_LIBRARY target ggml-base


#############################################
# Order-only phony target for ggml-base

build cmake_object_order_depends_target_ggml-base: phony || .

build ggml/src/CMakeFiles/ggml-base.dir/ggml.c.o: C_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml.c || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/ggml-alloc.c.o: C_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-alloc.c || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml-alloc.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/ggml-backend.cpp.o: CXX_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-backend.cpp || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml-backend.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/ggml-opt.cpp.o: CXX_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-opt.cpp || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml-opt.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/ggml-threading.cpp.o: CXX_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-threading.cpp || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml-threading.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/ggml-quants.c.o: C_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-quants.c || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/ggml-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb

build ggml/src/CMakeFiles/ggml-base.dir/gguf.cpp.o: CXX_COMPILER__ggml-base_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/gguf.cpp || cmake_object_order_depends_target_ggml-base
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_base_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-base.dir/gguf.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-base.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_PDB = bin/libggml-base.pdb


# =============================================================================
# Link build statements for SHARED_LIBRARY target ggml-base


#############################################
# Link the shared library bin/libggml-base.dylib

build bin/libggml-base.dylib: CXX_SHARED_LIBRARY_LINKER__ggml-base_Release ggml/src/CMakeFiles/ggml-base.dir/ggml.c.o ggml/src/CMakeFiles/ggml-base.dir/ggml-alloc.c.o ggml/src/CMakeFiles/ggml-base.dir/ggml-backend.cpp.o ggml/src/CMakeFiles/ggml-base.dir/ggml-opt.cpp.o ggml/src/CMakeFiles/ggml-base.dir/ggml-threading.cpp.o ggml/src/CMakeFiles/ggml-base.dir/ggml-quants.c.o ggml/src/CMakeFiles/ggml-base.dir/gguf.cpp.o
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  INSTALLNAME_DIR = @rpath/
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -lm
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-base.dir
  POST_BUILD = :
  PRE_LINK = :
  SONAME = libggml-base.dylib
  SONAME_FLAG = -install_name
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-base.dir/
  TARGET_FILE = bin/libggml-base.dylib
  TARGET_PDB = bin/libggml-base.pdb

# =============================================================================
# Object build statements for SHARED_LIBRARY target ggml


#############################################
# Order-only phony target for ggml

build cmake_object_order_depends_target_ggml: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-blas cmake_object_order_depends_target_ggml-cpu-alderlake cmake_object_order_depends_target_ggml-cpu-haswell cmake_object_order_depends_target_ggml-cpu-icelake cmake_object_order_depends_target_ggml-cpu-sandybridge cmake_object_order_depends_target_ggml-cpu-sapphirerapids cmake_object_order_depends_target_ggml-cpu-skylakex cmake_object_order_depends_target_ggml-metal

build ggml/src/CMakeFiles/ggml.dir/ggml-backend-reg.cpp.o: CXX_COMPILER__ggml_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-backend-reg.cpp || cmake_object_order_depends_target_ggml
  DEFINES = -DGGML_BUILD -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml.dir/ggml-backend-reg.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml.dir
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml.dir/
  TARGET_PDB = bin/libggml.pdb


# =============================================================================
# Link build statements for SHARED_LIBRARY target ggml


#############################################
# Link the shared library bin/libggml.dylib

build bin/libggml.dylib: CXX_SHARED_LIBRARY_LINKER__ggml_Release ggml/src/CMakeFiles/ggml.dir/ggml-backend-reg.cpp.o | bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml-blas.so bin/libggml-cpu-alderlake.so bin/libggml-cpu-haswell.so bin/libggml-cpu-icelake.so bin/libggml-cpu-sandybridge.so bin/libggml-cpu-sapphirerapids.so bin/libggml-cpu-skylakex.so bin/libggml-metal.so
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  INSTALLNAME_DIR = @rpath/
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml.dir
  POST_BUILD = :
  PRE_LINK = :
  SONAME = libggml.dylib
  SONAME_FLAG = -install_name
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml.dir/
  TARGET_FILE = bin/libggml.dylib
  TARGET_PDB = bin/libggml.pdb

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-sandybridge


#############################################
# Order-only phony target for ggml-cpu-sandybridge

build cmake_object_order_depends_target_ggml-cpu-sandybridge: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-sandybridge-feats

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

build ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sandybridge_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-sandybridge


#############################################
# Link the shared module bin/libggml-cpu-sandybridge.so

build bin/libggml-cpu-sandybridge.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-sandybridge_Release ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-sandybridge-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge.dir/
  TARGET_FILE = bin/libggml-cpu-sandybridge.so
  TARGET_PDB = bin/libggml-cpu-sandybridge.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-sandybridge-feats


#############################################
# Order-only phony target for ggml-cpu-sandybridge-feats

build cmake_object_order_depends_target_ggml-cpu-sandybridge-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-sandybridge-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-sandybridge-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-sandybridge-feats

build ggml/src/ggml-cpu-sandybridge-feats: phony ggml/src/CMakeFiles/ggml-cpu-sandybridge-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-haswell


#############################################
# Order-only phony target for ggml-cpu-haswell

build cmake_object_order_depends_target_ggml-cpu-haswell: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-haswell-feats

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

build ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-haswell_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-haswell
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_haswell_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_PDB = bin/libggml-cpu-haswell.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-haswell


#############################################
# Link the shared module bin/libggml-cpu-haswell.so

build bin/libggml-cpu-haswell.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-haswell_Release ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-haswell.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-haswell-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell.dir/
  TARGET_FILE = bin/libggml-cpu-haswell.so
  TARGET_PDB = bin/libggml-cpu-haswell.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-haswell-feats


#############################################
# Order-only phony target for ggml-cpu-haswell-feats

build cmake_object_order_depends_target_ggml-cpu-haswell-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-haswell-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-haswell-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-haswell-feats

build ggml/src/ggml-cpu-haswell-feats: phony ggml/src/CMakeFiles/ggml-cpu-haswell-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-skylakex


#############################################
# Order-only phony target for ggml-cpu-skylakex

build cmake_object_order_depends_target_ggml-cpu-skylakex: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-skylakex-feats

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

build ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-skylakex_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_skylakex_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-skylakex


#############################################
# Link the shared module bin/libggml-cpu-skylakex.so

build bin/libggml-cpu-skylakex.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-skylakex_Release ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-skylakex-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex.dir/
  TARGET_FILE = bin/libggml-cpu-skylakex.so
  TARGET_PDB = bin/libggml-cpu-skylakex.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-skylakex-feats


#############################################
# Order-only phony target for ggml-cpu-skylakex-feats

build cmake_object_order_depends_target_ggml-cpu-skylakex-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-skylakex-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-skylakex-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-skylakex-feats

build ggml/src/ggml-cpu-skylakex-feats: phony ggml/src/CMakeFiles/ggml-cpu-skylakex-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-icelake


#############################################
# Order-only phony target for ggml-cpu-icelake

build cmake_object_order_depends_target_ggml-cpu-icelake: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-icelake-feats

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

build ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-icelake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-icelake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_icelake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_PDB = bin/libggml-cpu-icelake.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-icelake


#############################################
# Link the shared module bin/libggml-cpu-icelake.so

build bin/libggml-cpu-icelake.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-icelake_Release ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-icelake.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-icelake-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake.dir/
  TARGET_FILE = bin/libggml-cpu-icelake.so
  TARGET_PDB = bin/libggml-cpu-icelake.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-icelake-feats


#############################################
# Order-only phony target for ggml-cpu-icelake-feats

build cmake_object_order_depends_target_ggml-cpu-icelake-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-icelake-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-icelake-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-icelake-feats

build ggml/src/ggml-cpu-icelake-feats: phony ggml/src/CMakeFiles/ggml-cpu-icelake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-alderlake


#############################################
# Order-only phony target for ggml-cpu-alderlake

build cmake_object_order_depends_target_ggml-cpu-alderlake: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-alderlake-feats

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

build ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-alderlake_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_alderlake_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-alderlake


#############################################
# Link the shared module bin/libggml-cpu-alderlake.so

build bin/libggml-cpu-alderlake.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-alderlake_Release ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-alderlake-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake.dir/
  TARGET_FILE = bin/libggml-cpu-alderlake.so
  TARGET_PDB = bin/libggml-cpu-alderlake.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-alderlake-feats


#############################################
# Order-only phony target for ggml-cpu-alderlake-feats

build cmake_object_order_depends_target_ggml-cpu-alderlake-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-alderlake-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-alderlake-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-alderlake-feats

build ggml/src/ggml-cpu-alderlake-feats: phony ggml/src/CMakeFiles/ggml-cpu-alderlake-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-cpu-sapphirerapids


#############################################
# Order-only phony target for ggml-cpu-sapphirerapids

build cmake_object_order_depends_target_ggml-cpu-sapphirerapids: phony || cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_ggml-cpu-sapphirerapids-feats

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.c.o: C_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.c || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-aarch64.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-hbm.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-hbm.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-hbm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-quants.c.o: C_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-quants.c || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-quants.c.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-traits.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/ggml-cpu-traits.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-traits.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/amx.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/amx.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/amx.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/mmq.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/amx/mmq.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/mmq.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/llamafile/sgemm.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/llamafile/sgemm.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -DGGML_USE_ACCELERATE -DGGML_USE_CPU_AARCH64 -DGGML_USE_LLAMAFILE -DGGML_USE_OPENMP -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_cpu_sapphirerapids_EXPORTS
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/llamafile/sgemm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi -fopenmp=libomp
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/llamafile
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-cpu-sapphirerapids


#############################################
# Link the shared module bin/libggml-cpu-sapphirerapids.so

build bin/libggml-cpu-sapphirerapids.so: CXX_MODULE_LIBRARY_LINKER__ggml-cpu-sapphirerapids_Release ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.c.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-hbm.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-quants.c.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/ggml-cpu-traits.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/amx.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/amx/mmq.cpp.o ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/ggml-cpu/llamafile/sgemm.cpp.o | bin/libggml-base.dylib /opt/homebrew/opt/llvm/lib/libomp.dylib || bin/libggml-base.dylib ggml/src/ggml-cpu-sapphirerapids-feats
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate  /opt/homebrew/opt/llvm/lib/libomp.dylib
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids.dir/
  TARGET_FILE = bin/libggml-cpu-sapphirerapids.so
  TARGET_PDB = bin/libggml-cpu-sapphirerapids.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target ggml-cpu-sapphirerapids-feats


#############################################
# Order-only phony target for ggml-cpu-sapphirerapids-feats

build cmake_object_order_depends_target_ggml-cpu-sapphirerapids-feats: phony || .

build ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o: CXX_COMPILER__ggml-cpu-sapphirerapids-feats_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/cpu-feats-x86.cpp || cmake_object_order_depends_target_ggml-cpu-sapphirerapids-feats
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_SCHED_MAX_COPIES=4 -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600
  DEP_FILE = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/. -I/Users/hertz/github_projects/llama.cpp/ggml/src/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir
  OBJECT_FILE_DIR = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/ggml-cpu
  TARGET_COMPILE_PDB = ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/
  TARGET_PDB = ""



#############################################
# Object library ggml-cpu-sapphirerapids-feats

build ggml/src/ggml-cpu-sapphirerapids-feats: phony ggml/src/CMakeFiles/ggml-cpu-sapphirerapids-feats.dir/ggml-cpu/cpu-feats-x86.cpp.o


#############################################
# Utility command for test

build ggml/src/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build ggml/src/test: phony ggml/src/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build ggml/src/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build ggml/src/edit_cache: phony ggml/src/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build ggml/src/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build ggml/src/rebuild_cache: phony ggml/src/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build ggml/src/list_install_components: phony


#############################################
# Utility command for install

build ggml/src/CMakeFiles/install.util: CUSTOM_COMMAND ggml/src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build ggml/src/install: phony ggml/src/CMakeFiles/install.util


#############################################
# Utility command for install/local

build ggml/src/CMakeFiles/install/local.util: CUSTOM_COMMAND ggml/src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build ggml/src/install/local: phony ggml/src/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build ggml/src/CMakeFiles/install/strip.util: CUSTOM_COMMAND ggml/src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build ggml/src/install/strip: phony ggml/src/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/ggml/src/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for test

build ggml/src/ggml-cpu/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/test: phony ggml/src/ggml-cpu/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build ggml/src/ggml-cpu/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/edit_cache: phony ggml/src/ggml-cpu/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build ggml/src/ggml-cpu/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/rebuild_cache: phony ggml/src/ggml-cpu/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build ggml/src/ggml-cpu/list_install_components: phony


#############################################
# Utility command for install

build ggml/src/ggml-cpu/CMakeFiles/install.util: CUSTOM_COMMAND ggml/src/ggml-cpu/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/install: phony ggml/src/ggml-cpu/CMakeFiles/install.util


#############################################
# Utility command for install/local

build ggml/src/ggml-cpu/CMakeFiles/install/local.util: CUSTOM_COMMAND ggml/src/ggml-cpu/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/install/local: phony ggml/src/ggml-cpu/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build ggml/src/ggml-cpu/CMakeFiles/install/strip.util: CUSTOM_COMMAND ggml/src/ggml-cpu/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build ggml/src/ggml-cpu/install/strip: phony ggml/src/ggml-cpu/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/ggml/src/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-blas


#############################################
# Order-only phony target for ggml-blas

build cmake_object_order_depends_target_ggml-blas: phony || cmake_object_order_depends_target_ggml-base

build ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir/ggml-blas.cpp.o: CXX_COMPILER__ggml-blas_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-blas/ggml-blas.cpp || cmake_object_order_depends_target_ggml-blas
  DEFINES = -DACCELERATE_LAPACK_ILP64 -DACCELERATE_NEW_LAPACK -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_BLAS_USE_ACCELERATE -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_blas_EXPORTS
  DEP_FILE = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir/ggml-blas.cpp.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu++17 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-blas/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir
  OBJECT_FILE_DIR = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir
  TARGET_COMPILE_PDB = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir/
  TARGET_PDB = bin/libggml-blas.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-blas


#############################################
# Link the shared module bin/libggml-blas.so

build bin/libggml-blas.so: CXX_MODULE_LIBRARY_LINKER__ggml-blas_Release ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir/ggml-blas.cpp.o | bin/libggml-base.dylib || bin/libggml-base.dylib
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Accelerate
  OBJECT_DIR = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/ggml-blas/CMakeFiles/ggml-blas.dir/
  TARGET_FILE = bin/libggml-blas.so
  TARGET_PDB = bin/libggml-blas.pdb


#############################################
# Utility command for test

build ggml/src/ggml-blas/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build ggml/src/ggml-blas/test: phony ggml/src/ggml-blas/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build ggml/src/ggml-blas/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build ggml/src/ggml-blas/edit_cache: phony ggml/src/ggml-blas/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build ggml/src/ggml-blas/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build ggml/src/ggml-blas/rebuild_cache: phony ggml/src/ggml-blas/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build ggml/src/ggml-blas/list_install_components: phony


#############################################
# Utility command for install

build ggml/src/ggml-blas/CMakeFiles/install.util: CUSTOM_COMMAND ggml/src/ggml-blas/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build ggml/src/ggml-blas/install: phony ggml/src/ggml-blas/CMakeFiles/install.util


#############################################
# Utility command for install/local

build ggml/src/ggml-blas/CMakeFiles/install/local.util: CUSTOM_COMMAND ggml/src/ggml-blas/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build ggml/src/ggml-blas/install/local: phony ggml/src/ggml-blas/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build ggml/src/ggml-blas/CMakeFiles/install/strip.util: CUSTOM_COMMAND ggml/src/ggml-blas/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build ggml/src/ggml-blas/install/strip: phony ggml/src/ggml-blas/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/ggml/src/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for MODULE_LIBRARY target ggml-metal


#############################################
# Order-only phony target for ggml-metal

build cmake_object_order_depends_target_ggml-metal: phony || autogenerated/ggml-metal-embed.s cmake_object_order_depends_target_ggml-base

build ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/ggml-metal.m.o: C_COMPILER__ggml-metal_unscanned_Release /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal.m || cmake_object_order_depends_target_ggml-metal
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_METAL_EMBED_LIBRARY -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_metal_EXPORTS
  DEP_FILE = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/ggml-metal.m.o.d
  FLAGS = -O3 -DNDEBUG -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -F/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks
  OBJECT_DIR = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir
  OBJECT_FILE_DIR = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir
  TARGET_COMPILE_PDB = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/
  TARGET_PDB = bin/libggml-metal.pdb

build ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/__/__/__/autogenerated/ggml-metal-embed.s.o: ASM_COMPILER__ggml-metal_unscanned_Release /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s || cmake_object_order_depends_target_ggml-metal
  DEFINES = -DGGML_BACKEND_BUILD -DGGML_BACKEND_DL -DGGML_BACKEND_SHARED -DGGML_METAL_EMBED_LIBRARY -DGGML_SCHED_MAX_COPIES=4 -DGGML_SHARED -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE=600 -Dggml_metal_EXPORTS
  DEP_FILE = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/__/__/__/autogenerated/ggml-metal-embed.s.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/.. -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -I/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks/Foundation.framework -I/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks/Metal.framework -I/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks/MetalKit.framework
  OBJECT_DIR = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir
  OBJECT_FILE_DIR = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/__/__/__/autogenerated
  TARGET_COMPILE_PDB = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/
  TARGET_PDB = bin/libggml-metal.pdb


# =============================================================================
# Link build statements for MODULE_LIBRARY target ggml-metal


#############################################
# Link the shared module bin/libggml-metal.so

build bin/libggml-metal.so: C_MODULE_LIBRARY_LINKER__ggml-metal_Release ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/ggml-metal.m.o ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/__/__/__/autogenerated/ggml-metal-embed.s.o | bin/libggml-base.dylib || bin/libggml-base.dylib
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml-base.dylib  -framework Foundation  -framework Metal  -framework MetalKit
  OBJECT_DIR = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = ggml/src/ggml-metal/CMakeFiles/ggml-metal.dir/
  TARGET_FILE = bin/libggml-metal.so
  TARGET_PDB = bin/libggml-metal.pdb


#############################################
# Utility command for test

build ggml/src/ggml-metal/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build ggml/src/ggml-metal/test: phony ggml/src/ggml-metal/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build ggml/src/ggml-metal/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build ggml/src/ggml-metal/edit_cache: phony ggml/src/ggml-metal/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build ggml/src/ggml-metal/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build ggml/src/ggml-metal/rebuild_cache: phony ggml/src/ggml-metal/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build ggml/src/ggml-metal/list_install_components: phony


#############################################
# Utility command for install

build ggml/src/ggml-metal/CMakeFiles/install.util: CUSTOM_COMMAND ggml/src/ggml-metal/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build ggml/src/ggml-metal/install: phony ggml/src/ggml-metal/CMakeFiles/install.util


#############################################
# Utility command for install/local

build ggml/src/ggml-metal/CMakeFiles/install/local.util: CUSTOM_COMMAND ggml/src/ggml-metal/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build ggml/src/ggml-metal/install/local: phony ggml/src/ggml-metal/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build ggml/src/ggml-metal/CMakeFiles/install/strip.util: CUSTOM_COMMAND ggml/src/ggml-metal/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build ggml/src/ggml-metal/install/strip: phony ggml/src/ggml-metal/CMakeFiles/install/strip.util


#############################################
# Custom command for autogenerated/ggml-metal-embed.s

build autogenerated/ggml-metal-embed.s | ${cmake_ninja_workdir}autogenerated/ggml-metal-embed.s: CUSTOM_COMMAND /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-common.h /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal.metal /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal-impl.h || bin/libggml-base.dylib
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal && echo Embedding\ Metal\ library && sed -e '/__embed_ggml-common.h__/r /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/../ggml-common.h' -e '/__embed_ggml-common.h__/d' < /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal.metal > /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.metal.tmp && sed -e '/#include "ggml-metal-impl.h"/r /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal-impl.h' -e '/#include "ggml-metal-impl.h"/d' < /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.metal.tmp > /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.metal && echo .section\ __DATA,__ggml_metallib > /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s && echo .globl\ _ggml_metallib_start >> /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s && echo _ggml_metallib_start: >> /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s && echo .incbin\ \"/Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.metal\" >> /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s && echo .globl\ _ggml_metallib_end >> /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s && echo _ggml_metallib_end: >> /Users/hertz/github_projects/llama.cpp/build/autogenerated/ggml-metal-embed.s
  DESC = Generate assembly for embedded Metal library
  restat = 1

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for SHARED_LIBRARY target llama


#############################################
# Order-only phony target for llama

build cmake_object_order_depends_target_llama: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base

build src/CMakeFiles/llama.dir/llama.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-adapter.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-adapter.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-adapter.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-arch.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-arch.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-arch.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-batch.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-batch.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-batch.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-chat.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-chat.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-chat.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-context.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-context.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-context.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-grammar.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-grammar.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-grammar.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-hparams.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-hparams.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-hparams.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-impl.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-impl.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-impl.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-kv-cache.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-kv-cache.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-kv-cache.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-mmap.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-mmap.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-mmap.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-model-loader.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-model-loader.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-model-loader.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-model.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-model.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-quant.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-quant.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-quant.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-sampling.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-sampling.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-sampling.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/llama-vocab.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/llama-vocab.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/llama-vocab.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/unicode.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/unicode.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/unicode.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb

build src/CMakeFiles/llama.dir/unicode-data.cpp.o: CXX_COMPILER__llama_unscanned_Release /Users/hertz/github_projects/llama.cpp/src/unicode-data.cpp || cmake_object_order_depends_target_llama
  DEFINES = -DGGML_SHARED -DLLAMA_BUILD -DLLAMA_SHARED -Dllama_EXPORTS
  DEP_FILE = src/CMakeFiles/llama.dir/unicode-data.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = src/CMakeFiles/llama.dir
  OBJECT_FILE_DIR = src/CMakeFiles/llama.dir
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_PDB = bin/libllama.pdb


# =============================================================================
# Link build statements for SHARED_LIBRARY target llama


#############################################
# Link the shared library bin/libllama.dylib

build bin/libllama.dylib: CXX_SHARED_LIBRARY_LINKER__llama_Release src/CMakeFiles/llama.dir/llama.cpp.o src/CMakeFiles/llama.dir/llama-adapter.cpp.o src/CMakeFiles/llama.dir/llama-arch.cpp.o src/CMakeFiles/llama.dir/llama-batch.cpp.o src/CMakeFiles/llama.dir/llama-chat.cpp.o src/CMakeFiles/llama.dir/llama-context.cpp.o src/CMakeFiles/llama.dir/llama-grammar.cpp.o src/CMakeFiles/llama.dir/llama-hparams.cpp.o src/CMakeFiles/llama.dir/llama-impl.cpp.o src/CMakeFiles/llama.dir/llama-kv-cache.cpp.o src/CMakeFiles/llama.dir/llama-mmap.cpp.o src/CMakeFiles/llama.dir/llama-model-loader.cpp.o src/CMakeFiles/llama.dir/llama-model.cpp.o src/CMakeFiles/llama.dir/llama-quant.cpp.o src/CMakeFiles/llama.dir/llama-sampling.cpp.o src/CMakeFiles/llama.dir/llama-vocab.cpp.o src/CMakeFiles/llama.dir/unicode.cpp.o src/CMakeFiles/llama.dir/unicode-data.cpp.o | bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  INSTALLNAME_DIR = @rpath/
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = src/CMakeFiles/llama.dir
  POST_BUILD = :
  PRE_LINK = :
  SONAME = libllama.dylib
  SONAME_FLAG = -install_name
  TARGET_COMPILE_PDB = src/CMakeFiles/llama.dir/
  TARGET_FILE = bin/libllama.dylib
  TARGET_PDB = bin/libllama.pdb


#############################################
# Utility command for test

build src/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build src/test: phony src/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build src/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build src/edit_cache: phony src/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build src/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build src/rebuild_cache: phony src/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build src/list_install_components: phony


#############################################
# Utility command for install

build src/CMakeFiles/install.util: CUSTOM_COMMAND src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build src/install: phony src/CMakeFiles/install.util


#############################################
# Utility command for install/local

build src/CMakeFiles/install/local.util: CUSTOM_COMMAND src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build src/install/local: phony src/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build src/CMakeFiles/install/strip.util: CUSTOM_COMMAND src/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/src && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build src/install/strip: phony src/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for OBJECT_LIBRARY target build_info


#############################################
# Order-only phony target for build_info

build cmake_object_order_depends_target_build_info: phony || /Users/hertz/github_projects/llama.cpp/common/build-info.cpp

build common/CMakeFiles/build_info.dir/build-info.cpp.o: CXX_COMPILER__build_info_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/build-info.cpp || cmake_object_order_depends_target_build_info
  DEP_FILE = common/CMakeFiles/build_info.dir/build-info.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  OBJECT_DIR = common/CMakeFiles/build_info.dir
  OBJECT_FILE_DIR = common/CMakeFiles/build_info.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/build_info.dir/
  TARGET_PDB = ""



#############################################
# Object library build_info

build common/build_info: phony common/CMakeFiles/build_info.dir/build-info.cpp.o

# =============================================================================
# Object build statements for STATIC_LIBRARY target common


#############################################
# Order-only phony target for common

build cmake_object_order_depends_target_common: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build common/CMakeFiles/common.dir/arg.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/arg.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/arg.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/chat.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/chat.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/chat.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/common.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/common.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/common.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/console.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/console.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/console.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/json-schema-to-grammar.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/json-schema-to-grammar.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/json-schema-to-grammar.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/llguidance.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/llguidance.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/llguidance.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/log.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/log.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/log.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/ngram-cache.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/ngram-cache.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/ngram-cache.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/sampling.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/sampling.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/sampling.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb

build common/CMakeFiles/common.dir/speculative.cpp.o: CXX_COMPILER__common_unscanned_Release /Users/hertz/github_projects/llama.cpp/common/speculative.cpp || cmake_object_order_depends_target_common
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = common/CMakeFiles/common.dir/speculative.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -fPIC -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = common/CMakeFiles/common.dir
  OBJECT_FILE_DIR = common/CMakeFiles/common.dir
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_PDB = common/libcommon.pdb


# =============================================================================
# Link build statements for STATIC_LIBRARY target common


#############################################
# Link the static library common/libcommon.a

build common/libcommon.a: CXX_STATIC_LIBRARY_LINKER__common_Release common/CMakeFiles/build_info.dir/build-info.cpp.o common/CMakeFiles/common.dir/arg.cpp.o common/CMakeFiles/common.dir/chat.cpp.o common/CMakeFiles/common.dir/common.cpp.o common/CMakeFiles/common.dir/console.cpp.o common/CMakeFiles/common.dir/json-schema-to-grammar.cpp.o common/CMakeFiles/common.dir/llguidance.cpp.o common/CMakeFiles/common.dir/log.cpp.o common/CMakeFiles/common.dir/ngram-cache.cpp.o common/CMakeFiles/common.dir/sampling.cpp.o common/CMakeFiles/common.dir/speculative.cpp.o || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info
  ARCH_FLAGS = -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LANGUAGE_COMPILE_FLAGS = -O3 -DNDEBUG
  OBJECT_DIR = common/CMakeFiles/common.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = common/CMakeFiles/common.dir/common.pdb
  TARGET_FILE = common/libcommon.a
  TARGET_PDB = common/libcommon.pdb


#############################################
# Utility command for test

build common/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build common/test: phony common/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build common/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build common/edit_cache: phony common/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build common/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build common/rebuild_cache: phony common/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build common/list_install_components: phony


#############################################
# Utility command for install

build common/CMakeFiles/install.util: CUSTOM_COMMAND common/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build common/install: phony common/CMakeFiles/install.util


#############################################
# Utility command for install/local

build common/CMakeFiles/install/local.util: CUSTOM_COMMAND common/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build common/install/local: phony common/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build common/CMakeFiles/install/strip.util: CUSTOM_COMMAND common/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/common && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build common/install/strip: phony common/CMakeFiles/install/strip.util


#############################################
# Custom command for /Users/hertz/github_projects/llama.cpp/common/build-info.cpp

build /Users/hertz/github_projects/llama.cpp/common/build-info.cpp: CUSTOM_COMMAND /Users/hertz/github_projects/llama.cpp/common/build-info.cpp.in /Users/hertz/github_projects/llama.cpp/.git/index
  COMMAND = cd /Users/hertz/github_projects/llama.cpp && /opt/homebrew/bin/cmake -DMSVC= -DCMAKE_C_COMPILER_VERSION=19.1.7 -DCMAKE_C_COMPILER_ID=Clang -DCMAKE_VS_PLATFORM_NAME= -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm/bin/clang -P /Users/hertz/github_projects/llama.cpp/common/cmake/build-info-gen-cpp.cmake
  DESC = Generating build details from Git
  restat = 1

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target test-tokenizer-0


#############################################
# Order-only phony target for test-tokenizer-0

build cmake_object_order_depends_target_test-tokenizer-0: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-tokenizer-0.dir/test-tokenizer-0.cpp.o: CXX_COMPILER__test-tokenizer-0_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-tokenizer-0.cpp || cmake_object_order_depends_target_test-tokenizer-0
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-tokenizer-0.dir/test-tokenizer-0.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-0.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-tokenizer-0.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-0.dir/
  TARGET_PDB = bin/test-tokenizer-0.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-tokenizer-0


#############################################
# Link the executable bin/test-tokenizer-0

build bin/test-tokenizer-0: CXX_EXECUTABLE_LINKER__test-tokenizer-0_Release tests/CMakeFiles/test-tokenizer-0.dir/test-tokenizer-0.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-0.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-0.dir/
  TARGET_FILE = bin/test-tokenizer-0
  TARGET_PDB = bin/test-tokenizer-0.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-sampling


#############################################
# Order-only phony target for test-sampling

build cmake_object_order_depends_target_test-sampling: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-sampling.dir/test-sampling.cpp.o: CXX_COMPILER__test-sampling_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-sampling.cpp || cmake_object_order_depends_target_test-sampling
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-sampling.dir/test-sampling.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-sampling.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-sampling.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-sampling.dir/
  TARGET_PDB = bin/test-sampling.pdb

build tests/CMakeFiles/test-sampling.dir/get-model.cpp.o: CXX_COMPILER__test-sampling_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-sampling
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-sampling.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-sampling.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-sampling.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-sampling.dir/
  TARGET_PDB = bin/test-sampling.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-sampling


#############################################
# Link the executable bin/test-sampling

build bin/test-sampling: CXX_EXECUTABLE_LINKER__test-sampling_Release tests/CMakeFiles/test-sampling.dir/test-sampling.cpp.o tests/CMakeFiles/test-sampling.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-sampling.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-sampling.dir/
  TARGET_FILE = bin/test-sampling
  TARGET_PDB = bin/test-sampling.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-grammar-parser


#############################################
# Order-only phony target for test-grammar-parser

build cmake_object_order_depends_target_test-grammar-parser: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-grammar-parser.dir/test-grammar-parser.cpp.o: CXX_COMPILER__test-grammar-parser_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-grammar-parser.cpp || cmake_object_order_depends_target_test-grammar-parser
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-grammar-parser.dir/test-grammar-parser.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-grammar-parser.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-grammar-parser.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-parser.dir/
  TARGET_PDB = bin/test-grammar-parser.pdb

build tests/CMakeFiles/test-grammar-parser.dir/get-model.cpp.o: CXX_COMPILER__test-grammar-parser_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-grammar-parser
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-grammar-parser.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-grammar-parser.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-grammar-parser.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-parser.dir/
  TARGET_PDB = bin/test-grammar-parser.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-grammar-parser


#############################################
# Link the executable bin/test-grammar-parser

build bin/test-grammar-parser: CXX_EXECUTABLE_LINKER__test-grammar-parser_Release tests/CMakeFiles/test-grammar-parser.dir/test-grammar-parser.cpp.o tests/CMakeFiles/test-grammar-parser.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-grammar-parser.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-parser.dir/
  TARGET_FILE = bin/test-grammar-parser
  TARGET_PDB = bin/test-grammar-parser.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-grammar-integration


#############################################
# Order-only phony target for test-grammar-integration

build cmake_object_order_depends_target_test-grammar-integration: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-grammar-integration.dir/test-grammar-integration.cpp.o: CXX_COMPILER__test-grammar-integration_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-grammar-integration.cpp || cmake_object_order_depends_target_test-grammar-integration
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-grammar-integration.dir/test-grammar-integration.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-grammar-integration.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-grammar-integration.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-integration.dir/
  TARGET_PDB = bin/test-grammar-integration.pdb

build tests/CMakeFiles/test-grammar-integration.dir/get-model.cpp.o: CXX_COMPILER__test-grammar-integration_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-grammar-integration
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-grammar-integration.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-grammar-integration.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-grammar-integration.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-integration.dir/
  TARGET_PDB = bin/test-grammar-integration.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-grammar-integration


#############################################
# Link the executable bin/test-grammar-integration

build bin/test-grammar-integration: CXX_EXECUTABLE_LINKER__test-grammar-integration_Release tests/CMakeFiles/test-grammar-integration.dir/test-grammar-integration.cpp.o tests/CMakeFiles/test-grammar-integration.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-grammar-integration.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-grammar-integration.dir/
  TARGET_FILE = bin/test-grammar-integration
  TARGET_PDB = bin/test-grammar-integration.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-llama-grammar


#############################################
# Order-only phony target for test-llama-grammar

build cmake_object_order_depends_target_test-llama-grammar: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-llama-grammar.dir/test-llama-grammar.cpp.o: CXX_COMPILER__test-llama-grammar_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-llama-grammar.cpp || cmake_object_order_depends_target_test-llama-grammar
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-llama-grammar.dir/test-llama-grammar.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-llama-grammar.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-llama-grammar.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-llama-grammar.dir/
  TARGET_PDB = bin/test-llama-grammar.pdb

build tests/CMakeFiles/test-llama-grammar.dir/get-model.cpp.o: CXX_COMPILER__test-llama-grammar_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-llama-grammar
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-llama-grammar.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-llama-grammar.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-llama-grammar.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-llama-grammar.dir/
  TARGET_PDB = bin/test-llama-grammar.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-llama-grammar


#############################################
# Link the executable bin/test-llama-grammar

build bin/test-llama-grammar: CXX_EXECUTABLE_LINKER__test-llama-grammar_Release tests/CMakeFiles/test-llama-grammar.dir/test-llama-grammar.cpp.o tests/CMakeFiles/test-llama-grammar.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-llama-grammar.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-llama-grammar.dir/
  TARGET_FILE = bin/test-llama-grammar
  TARGET_PDB = bin/test-llama-grammar.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-chat


#############################################
# Order-only phony target for test-chat

build cmake_object_order_depends_target_test-chat: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-chat.dir/test-chat.cpp.o: CXX_COMPILER__test-chat_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-chat.cpp || cmake_object_order_depends_target_test-chat
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-chat.dir/test-chat.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-chat.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-chat.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat.dir/
  TARGET_PDB = bin/test-chat.pdb

build tests/CMakeFiles/test-chat.dir/get-model.cpp.o: CXX_COMPILER__test-chat_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-chat
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-chat.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-chat.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-chat.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat.dir/
  TARGET_PDB = bin/test-chat.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-chat


#############################################
# Link the executable bin/test-chat

build bin/test-chat: CXX_EXECUTABLE_LINKER__test-chat_Release tests/CMakeFiles/test-chat.dir/test-chat.cpp.o tests/CMakeFiles/test-chat.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-chat.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat.dir/
  TARGET_FILE = bin/test-chat
  TARGET_PDB = bin/test-chat.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-json-schema-to-grammar


#############################################
# Order-only phony target for test-json-schema-to-grammar

build cmake_object_order_depends_target_test-json-schema-to-grammar: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-json-schema-to-grammar.dir/test-json-schema-to-grammar.cpp.o: CXX_COMPILER__test-json-schema-to-grammar_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-json-schema-to-grammar.cpp || cmake_object_order_depends_target_test-json-schema-to-grammar
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-json-schema-to-grammar.dir/test-json-schema-to-grammar.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/tests/../examples/server -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-json-schema-to-grammar.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-json-schema-to-grammar.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-json-schema-to-grammar.dir/
  TARGET_PDB = bin/test-json-schema-to-grammar.pdb

build tests/CMakeFiles/test-json-schema-to-grammar.dir/get-model.cpp.o: CXX_COMPILER__test-json-schema-to-grammar_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-json-schema-to-grammar
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-json-schema-to-grammar.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/tests/../examples/server -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-json-schema-to-grammar.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-json-schema-to-grammar.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-json-schema-to-grammar.dir/
  TARGET_PDB = bin/test-json-schema-to-grammar.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-json-schema-to-grammar


#############################################
# Link the executable bin/test-json-schema-to-grammar

build bin/test-json-schema-to-grammar: CXX_EXECUTABLE_LINKER__test-json-schema-to-grammar_Release tests/CMakeFiles/test-json-schema-to-grammar.dir/test-json-schema-to-grammar.cpp.o tests/CMakeFiles/test-json-schema-to-grammar.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-json-schema-to-grammar.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-json-schema-to-grammar.dir/
  TARGET_FILE = bin/test-json-schema-to-grammar
  TARGET_PDB = bin/test-json-schema-to-grammar.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-tokenizer-1-bpe


#############################################
# Order-only phony target for test-tokenizer-1-bpe

build cmake_object_order_depends_target_test-tokenizer-1-bpe: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-tokenizer-1-bpe.dir/test-tokenizer-1-bpe.cpp.o: CXX_COMPILER__test-tokenizer-1-bpe_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-tokenizer-1-bpe.cpp || cmake_object_order_depends_target_test-tokenizer-1-bpe
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-tokenizer-1-bpe.dir/test-tokenizer-1-bpe.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-1-bpe.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-tokenizer-1-bpe.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-1-bpe.dir/
  TARGET_PDB = bin/test-tokenizer-1-bpe.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-tokenizer-1-bpe


#############################################
# Link the executable bin/test-tokenizer-1-bpe

build bin/test-tokenizer-1-bpe: CXX_EXECUTABLE_LINKER__test-tokenizer-1-bpe_Release tests/CMakeFiles/test-tokenizer-1-bpe.dir/test-tokenizer-1-bpe.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-1-bpe.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-1-bpe.dir/
  TARGET_FILE = bin/test-tokenizer-1-bpe
  TARGET_PDB = bin/test-tokenizer-1-bpe.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-tokenizer-1-spm


#############################################
# Order-only phony target for test-tokenizer-1-spm

build cmake_object_order_depends_target_test-tokenizer-1-spm: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-tokenizer-1-spm.dir/test-tokenizer-1-spm.cpp.o: CXX_COMPILER__test-tokenizer-1-spm_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-tokenizer-1-spm.cpp || cmake_object_order_depends_target_test-tokenizer-1-spm
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-tokenizer-1-spm.dir/test-tokenizer-1-spm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-1-spm.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-tokenizer-1-spm.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-1-spm.dir/
  TARGET_PDB = bin/test-tokenizer-1-spm.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-tokenizer-1-spm


#############################################
# Link the executable bin/test-tokenizer-1-spm

build bin/test-tokenizer-1-spm: CXX_EXECUTABLE_LINKER__test-tokenizer-1-spm_Release tests/CMakeFiles/test-tokenizer-1-spm.dir/test-tokenizer-1-spm.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-tokenizer-1-spm.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-tokenizer-1-spm.dir/
  TARGET_FILE = bin/test-tokenizer-1-spm
  TARGET_PDB = bin/test-tokenizer-1-spm.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-log


#############################################
# Order-only phony target for test-log

build cmake_object_order_depends_target_test-log: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-log.dir/test-log.cpp.o: CXX_COMPILER__test-log_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-log.cpp || cmake_object_order_depends_target_test-log
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-log.dir/test-log.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-log.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-log.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-log.dir/
  TARGET_PDB = bin/test-log.pdb

build tests/CMakeFiles/test-log.dir/get-model.cpp.o: CXX_COMPILER__test-log_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-log
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-log.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-log.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-log.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-log.dir/
  TARGET_PDB = bin/test-log.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-log


#############################################
# Link the executable bin/test-log

build bin/test-log: CXX_EXECUTABLE_LINKER__test-log_Release tests/CMakeFiles/test-log.dir/test-log.cpp.o tests/CMakeFiles/test-log.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-log.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-log.dir/
  TARGET_FILE = bin/test-log
  TARGET_PDB = bin/test-log.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-arg-parser


#############################################
# Order-only phony target for test-arg-parser

build cmake_object_order_depends_target_test-arg-parser: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-arg-parser.dir/test-arg-parser.cpp.o: CXX_COMPILER__test-arg-parser_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-arg-parser.cpp || cmake_object_order_depends_target_test-arg-parser
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-arg-parser.dir/test-arg-parser.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-arg-parser.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-arg-parser.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-arg-parser.dir/
  TARGET_PDB = bin/test-arg-parser.pdb

build tests/CMakeFiles/test-arg-parser.dir/get-model.cpp.o: CXX_COMPILER__test-arg-parser_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-arg-parser
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-arg-parser.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-arg-parser.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-arg-parser.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-arg-parser.dir/
  TARGET_PDB = bin/test-arg-parser.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-arg-parser


#############################################
# Link the executable bin/test-arg-parser

build bin/test-arg-parser: CXX_EXECUTABLE_LINKER__test-arg-parser_Release tests/CMakeFiles/test-arg-parser.dir/test-arg-parser.cpp.o tests/CMakeFiles/test-arg-parser.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-arg-parser.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-arg-parser.dir/
  TARGET_FILE = bin/test-arg-parser
  TARGET_PDB = bin/test-arg-parser.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-chat-template


#############################################
# Order-only phony target for test-chat-template

build cmake_object_order_depends_target_test-chat-template: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-chat-template.dir/test-chat-template.cpp.o: CXX_COMPILER__test-chat-template_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-chat-template.cpp || cmake_object_order_depends_target_test-chat-template
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-chat-template.dir/test-chat-template.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-chat-template.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-chat-template.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat-template.dir/
  TARGET_PDB = bin/test-chat-template.pdb

build tests/CMakeFiles/test-chat-template.dir/get-model.cpp.o: CXX_COMPILER__test-chat-template_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-chat-template
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-chat-template.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-chat-template.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-chat-template.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat-template.dir/
  TARGET_PDB = bin/test-chat-template.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-chat-template


#############################################
# Link the executable bin/test-chat-template

build bin/test-chat-template: CXX_EXECUTABLE_LINKER__test-chat-template_Release tests/CMakeFiles/test-chat-template.dir/test-chat-template.cpp.o tests/CMakeFiles/test-chat-template.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-chat-template.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-chat-template.dir/
  TARGET_FILE = bin/test-chat-template
  TARGET_PDB = bin/test-chat-template.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-gguf


#############################################
# Order-only phony target for test-gguf

build cmake_object_order_depends_target_test-gguf: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-gguf.dir/test-gguf.cpp.o: CXX_COMPILER__test-gguf_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-gguf.cpp || cmake_object_order_depends_target_test-gguf
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-gguf.dir/test-gguf.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-gguf.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-gguf.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-gguf.dir/
  TARGET_PDB = bin/test-gguf.pdb

build tests/CMakeFiles/test-gguf.dir/get-model.cpp.o: CXX_COMPILER__test-gguf_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-gguf
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-gguf.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-gguf.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-gguf.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-gguf.dir/
  TARGET_PDB = bin/test-gguf.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-gguf


#############################################
# Link the executable bin/test-gguf

build bin/test-gguf: CXX_EXECUTABLE_LINKER__test-gguf_Release tests/CMakeFiles/test-gguf.dir/test-gguf.cpp.o tests/CMakeFiles/test-gguf.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-gguf.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-gguf.dir/
  TARGET_FILE = bin/test-gguf
  TARGET_PDB = bin/test-gguf.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-backend-ops


#############################################
# Order-only phony target for test-backend-ops

build cmake_object_order_depends_target_test-backend-ops: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-backend-ops.dir/test-backend-ops.cpp.o: CXX_COMPILER__test-backend-ops_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-backend-ops.cpp || cmake_object_order_depends_target_test-backend-ops
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-backend-ops.dir/test-backend-ops.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-backend-ops.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-backend-ops.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-backend-ops.dir/
  TARGET_PDB = bin/test-backend-ops.pdb

build tests/CMakeFiles/test-backend-ops.dir/get-model.cpp.o: CXX_COMPILER__test-backend-ops_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-backend-ops
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-backend-ops.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-backend-ops.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-backend-ops.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-backend-ops.dir/
  TARGET_PDB = bin/test-backend-ops.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-backend-ops


#############################################
# Link the executable bin/test-backend-ops

build bin/test-backend-ops: CXX_EXECUTABLE_LINKER__test-backend-ops_Release tests/CMakeFiles/test-backend-ops.dir/test-backend-ops.cpp.o tests/CMakeFiles/test-backend-ops.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-backend-ops.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-backend-ops.dir/
  TARGET_FILE = bin/test-backend-ops
  TARGET_PDB = bin/test-backend-ops.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-model-load-cancel


#############################################
# Order-only phony target for test-model-load-cancel

build cmake_object_order_depends_target_test-model-load-cancel: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-model-load-cancel.dir/test-model-load-cancel.cpp.o: CXX_COMPILER__test-model-load-cancel_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-model-load-cancel.cpp || cmake_object_order_depends_target_test-model-load-cancel
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-model-load-cancel.dir/test-model-load-cancel.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-model-load-cancel.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-model-load-cancel.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-model-load-cancel.dir/
  TARGET_PDB = bin/test-model-load-cancel.pdb

build tests/CMakeFiles/test-model-load-cancel.dir/get-model.cpp.o: CXX_COMPILER__test-model-load-cancel_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-model-load-cancel
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-model-load-cancel.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-model-load-cancel.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-model-load-cancel.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-model-load-cancel.dir/
  TARGET_PDB = bin/test-model-load-cancel.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-model-load-cancel


#############################################
# Link the executable bin/test-model-load-cancel

build bin/test-model-load-cancel: CXX_EXECUTABLE_LINKER__test-model-load-cancel_Release tests/CMakeFiles/test-model-load-cancel.dir/test-model-load-cancel.cpp.o tests/CMakeFiles/test-model-load-cancel.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-model-load-cancel.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-model-load-cancel.dir/
  TARGET_FILE = bin/test-model-load-cancel
  TARGET_PDB = bin/test-model-load-cancel.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-autorelease


#############################################
# Order-only phony target for test-autorelease

build cmake_object_order_depends_target_test-autorelease: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-autorelease.dir/test-autorelease.cpp.o: CXX_COMPILER__test-autorelease_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-autorelease.cpp || cmake_object_order_depends_target_test-autorelease
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-autorelease.dir/test-autorelease.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-autorelease.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-autorelease.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-autorelease.dir/
  TARGET_PDB = bin/test-autorelease.pdb

build tests/CMakeFiles/test-autorelease.dir/get-model.cpp.o: CXX_COMPILER__test-autorelease_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/get-model.cpp || cmake_object_order_depends_target_test-autorelease
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-autorelease.dir/get-model.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-autorelease.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-autorelease.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-autorelease.dir/
  TARGET_PDB = bin/test-autorelease.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-autorelease


#############################################
# Link the executable bin/test-autorelease

build bin/test-autorelease: CXX_EXECUTABLE_LINKER__test-autorelease_Release tests/CMakeFiles/test-autorelease.dir/test-autorelease.cpp.o tests/CMakeFiles/test-autorelease.dir/get-model.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-autorelease.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-autorelease.dir/
  TARGET_FILE = bin/test-autorelease
  TARGET_PDB = bin/test-autorelease.pdb

# =============================================================================
# Object build statements for EXECUTABLE target test-c


#############################################
# Order-only phony target for test-c

build cmake_object_order_depends_target_test-c: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build tests/CMakeFiles/test-c.dir/test-c.c.o: C_COMPILER__test-c_unscanned_Release /Users/hertz/github_projects/llama.cpp/tests/test-c.c || cmake_object_order_depends_target_test-c
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = tests/CMakeFiles/test-c.dir/test-c.c.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = tests/CMakeFiles/test-c.dir
  OBJECT_FILE_DIR = tests/CMakeFiles/test-c.dir
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-c.dir/
  TARGET_PDB = bin/test-c.pdb


# =============================================================================
# Link build statements for EXECUTABLE target test-c


#############################################
# Link the executable bin/test-c

build bin/test-c: C_EXECUTABLE_LINKER__test-c_Release tests/CMakeFiles/test-c.dir/test-c.c.o | bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = tests/CMakeFiles/test-c.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = tests/CMakeFiles/test-c.dir/
  TARGET_FILE = bin/test-c
  TARGET_PDB = bin/test-c.pdb


#############################################
# Utility command for test

build tests/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build tests/test: phony tests/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build tests/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build tests/edit_cache: phony tests/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build tests/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build tests/rebuild_cache: phony tests/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build tests/list_install_components: phony


#############################################
# Utility command for install

build tests/CMakeFiles/install.util: CUSTOM_COMMAND tests/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build tests/install: phony tests/CMakeFiles/install.util


#############################################
# Utility command for install/local

build tests/CMakeFiles/install/local.util: CUSTOM_COMMAND tests/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build tests/install/local: phony tests/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build tests/CMakeFiles/install/strip.util: CUSTOM_COMMAND tests/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/tests && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build tests/install/strip: phony tests/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for test

build examples/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/test: phony examples/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/edit_cache: phony examples/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/rebuild_cache: phony examples/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/list_install_components: phony


#############################################
# Utility command for install

build examples/CMakeFiles/install.util: CUSTOM_COMMAND examples/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/install: phony examples/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/install/local: phony examples/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/install/strip: phony examples/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-batched-bench


#############################################
# Order-only phony target for llama-batched-bench

build cmake_object_order_depends_target_llama-batched-bench: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/batched-bench/CMakeFiles/llama-batched-bench.dir/batched-bench.cpp.o: CXX_COMPILER__llama-batched-bench_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/batched-bench/batched-bench.cpp || cmake_object_order_depends_target_llama-batched-bench
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/batched-bench/CMakeFiles/llama-batched-bench.dir/batched-bench.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/batched-bench/CMakeFiles/llama-batched-bench.dir
  OBJECT_FILE_DIR = examples/batched-bench/CMakeFiles/llama-batched-bench.dir
  TARGET_COMPILE_PDB = examples/batched-bench/CMakeFiles/llama-batched-bench.dir/
  TARGET_PDB = bin/llama-batched-bench.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-batched-bench


#############################################
# Link the executable bin/llama-batched-bench

build bin/llama-batched-bench: CXX_EXECUTABLE_LINKER__llama-batched-bench_Release examples/batched-bench/CMakeFiles/llama-batched-bench.dir/batched-bench.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/batched-bench/CMakeFiles/llama-batched-bench.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/batched-bench/CMakeFiles/llama-batched-bench.dir/
  TARGET_FILE = bin/llama-batched-bench
  TARGET_PDB = bin/llama-batched-bench.pdb


#############################################
# Utility command for test

build examples/batched-bench/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/batched-bench/test: phony examples/batched-bench/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/batched-bench/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/batched-bench/edit_cache: phony examples/batched-bench/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/batched-bench/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/batched-bench/rebuild_cache: phony examples/batched-bench/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/batched-bench/list_install_components: phony


#############################################
# Utility command for install

build examples/batched-bench/CMakeFiles/install.util: CUSTOM_COMMAND examples/batched-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/batched-bench/install: phony examples/batched-bench/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/batched-bench/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/batched-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/batched-bench/install/local: phony examples/batched-bench/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/batched-bench/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/batched-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/batched-bench/install/strip: phony examples/batched-bench/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-batched


#############################################
# Order-only phony target for llama-batched

build cmake_object_order_depends_target_llama-batched: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/batched/CMakeFiles/llama-batched.dir/batched.cpp.o: CXX_COMPILER__llama-batched_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/batched/batched.cpp || cmake_object_order_depends_target_llama-batched
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/batched/CMakeFiles/llama-batched.dir/batched.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/batched/CMakeFiles/llama-batched.dir
  OBJECT_FILE_DIR = examples/batched/CMakeFiles/llama-batched.dir
  TARGET_COMPILE_PDB = examples/batched/CMakeFiles/llama-batched.dir/
  TARGET_PDB = bin/llama-batched.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-batched


#############################################
# Link the executable bin/llama-batched

build bin/llama-batched: CXX_EXECUTABLE_LINKER__llama-batched_Release examples/batched/CMakeFiles/llama-batched.dir/batched.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/batched/CMakeFiles/llama-batched.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/batched/CMakeFiles/llama-batched.dir/
  TARGET_FILE = bin/llama-batched
  TARGET_PDB = bin/llama-batched.pdb


#############################################
# Utility command for test

build examples/batched/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/batched/test: phony examples/batched/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/batched/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/batched/edit_cache: phony examples/batched/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/batched/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/batched/rebuild_cache: phony examples/batched/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/batched/list_install_components: phony


#############################################
# Utility command for install

build examples/batched/CMakeFiles/install.util: CUSTOM_COMMAND examples/batched/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/batched/install: phony examples/batched/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/batched/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/batched/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/batched/install/local: phony examples/batched/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/batched/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/batched/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/batched && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/batched/install/strip: phony examples/batched/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-embedding


#############################################
# Order-only phony target for llama-embedding

build cmake_object_order_depends_target_llama-embedding: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/embedding/CMakeFiles/llama-embedding.dir/embedding.cpp.o: CXX_COMPILER__llama-embedding_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/embedding/embedding.cpp || cmake_object_order_depends_target_llama-embedding
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/embedding/CMakeFiles/llama-embedding.dir/embedding.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/embedding/CMakeFiles/llama-embedding.dir
  OBJECT_FILE_DIR = examples/embedding/CMakeFiles/llama-embedding.dir
  TARGET_COMPILE_PDB = examples/embedding/CMakeFiles/llama-embedding.dir/
  TARGET_PDB = bin/llama-embedding.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-embedding


#############################################
# Link the executable bin/llama-embedding

build bin/llama-embedding: CXX_EXECUTABLE_LINKER__llama-embedding_Release examples/embedding/CMakeFiles/llama-embedding.dir/embedding.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/embedding/CMakeFiles/llama-embedding.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/embedding/CMakeFiles/llama-embedding.dir/
  TARGET_FILE = bin/llama-embedding
  TARGET_PDB = bin/llama-embedding.pdb


#############################################
# Utility command for test

build examples/embedding/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/embedding/test: phony examples/embedding/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/embedding/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/embedding/edit_cache: phony examples/embedding/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/embedding/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/embedding/rebuild_cache: phony examples/embedding/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/embedding/list_install_components: phony


#############################################
# Utility command for install

build examples/embedding/CMakeFiles/install.util: CUSTOM_COMMAND examples/embedding/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/embedding/install: phony examples/embedding/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/embedding/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/embedding/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/embedding/install/local: phony examples/embedding/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/embedding/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/embedding/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/embedding && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/embedding/install/strip: phony examples/embedding/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-eval-callback


#############################################
# Order-only phony target for llama-eval-callback

build cmake_object_order_depends_target_llama-eval-callback: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/eval-callback/CMakeFiles/llama-eval-callback.dir/eval-callback.cpp.o: CXX_COMPILER__llama-eval-callback_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/eval-callback/eval-callback.cpp || cmake_object_order_depends_target_llama-eval-callback
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/eval-callback/CMakeFiles/llama-eval-callback.dir/eval-callback.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/eval-callback/CMakeFiles/llama-eval-callback.dir
  OBJECT_FILE_DIR = examples/eval-callback/CMakeFiles/llama-eval-callback.dir
  TARGET_COMPILE_PDB = examples/eval-callback/CMakeFiles/llama-eval-callback.dir/
  TARGET_PDB = bin/llama-eval-callback.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-eval-callback


#############################################
# Link the executable bin/llama-eval-callback

build bin/llama-eval-callback: CXX_EXECUTABLE_LINKER__llama-eval-callback_Release examples/eval-callback/CMakeFiles/llama-eval-callback.dir/eval-callback.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/eval-callback/CMakeFiles/llama-eval-callback.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/eval-callback/CMakeFiles/llama-eval-callback.dir/
  TARGET_FILE = bin/llama-eval-callback
  TARGET_PDB = bin/llama-eval-callback.pdb


#############################################
# Utility command for test

build examples/eval-callback/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/eval-callback/test: phony examples/eval-callback/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/eval-callback/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/eval-callback/edit_cache: phony examples/eval-callback/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/eval-callback/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/eval-callback/rebuild_cache: phony examples/eval-callback/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/eval-callback/list_install_components: phony


#############################################
# Utility command for install

build examples/eval-callback/CMakeFiles/install.util: CUSTOM_COMMAND examples/eval-callback/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/eval-callback/install: phony examples/eval-callback/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/eval-callback/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/eval-callback/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/eval-callback/install/local: phony examples/eval-callback/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/eval-callback/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/eval-callback/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/eval-callback/install/strip: phony examples/eval-callback/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gbnf-validator


#############################################
# Order-only phony target for llama-gbnf-validator

build cmake_object_order_depends_target_llama-gbnf-validator: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/gbnf-validator.cpp.o: CXX_COMPILER__llama-gbnf-validator_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gbnf-validator/gbnf-validator.cpp || cmake_object_order_depends_target_llama-gbnf-validator
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/gbnf-validator.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir
  OBJECT_FILE_DIR = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir
  TARGET_COMPILE_PDB = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/
  TARGET_PDB = bin/llama-gbnf-validator.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gbnf-validator


#############################################
# Link the executable bin/llama-gbnf-validator

build bin/llama-gbnf-validator: CXX_EXECUTABLE_LINKER__llama-gbnf-validator_Release examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/gbnf-validator.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/
  TARGET_FILE = bin/llama-gbnf-validator
  TARGET_PDB = bin/llama-gbnf-validator.pdb


#############################################
# Utility command for test

build examples/gbnf-validator/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gbnf-validator/test: phony examples/gbnf-validator/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gbnf-validator/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gbnf-validator/edit_cache: phony examples/gbnf-validator/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gbnf-validator/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gbnf-validator/rebuild_cache: phony examples/gbnf-validator/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gbnf-validator/list_install_components: phony


#############################################
# Utility command for install

build examples/gbnf-validator/CMakeFiles/install.util: CUSTOM_COMMAND examples/gbnf-validator/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gbnf-validator/install: phony examples/gbnf-validator/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gbnf-validator/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gbnf-validator/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gbnf-validator/install/local: phony examples/gbnf-validator/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gbnf-validator/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gbnf-validator/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gbnf-validator/install/strip: phony examples/gbnf-validator/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gguf-hash


#############################################
# Order-only phony target for llama-gguf-hash

build cmake_object_order_depends_target_llama-gguf-hash: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_sha1 cmake_object_order_depends_target_sha256 cmake_object_order_depends_target_xxhash

build examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/gguf-hash.cpp.o: CXX_COMPILER__llama-gguf-hash_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/gguf-hash.cpp || cmake_object_order_depends_target_llama-gguf-hash
  DEFINES = -DGGML_SHARED
  DEP_FILE = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/gguf-hash.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir
  OBJECT_FILE_DIR = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir
  TARGET_COMPILE_PDB = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/
  TARGET_PDB = bin/llama-gguf-hash.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gguf-hash


#############################################
# Link the executable bin/llama-gguf-hash

build bin/llama-gguf-hash: CXX_EXECUTABLE_LINKER__llama-gguf-hash_Release examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash/xxhash.c.o examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1/sha1.c.o examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256/sha256.c.o examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/gguf-hash.cpp.o | bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib examples/gguf-hash/sha1 examples/gguf-hash/sha256 examples/gguf-hash/xxhash
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/
  TARGET_FILE = bin/llama-gguf-hash
  TARGET_PDB = bin/llama-gguf-hash.pdb

# =============================================================================
# Object build statements for OBJECT_LIBRARY target xxhash


#############################################
# Order-only phony target for xxhash

build cmake_object_order_depends_target_xxhash: phony || .

build examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash/xxhash.c.o: C_COMPILER__xxhash_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps/xxhash/xxhash.c || cmake_object_order_depends_target_xxhash
  DEP_FILE = examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash/xxhash.c.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps
  OBJECT_DIR = examples/gguf-hash/CMakeFiles/xxhash.dir
  OBJECT_FILE_DIR = examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash
  TARGET_COMPILE_PDB = examples/gguf-hash/CMakeFiles/xxhash.dir/
  TARGET_PDB = ""



#############################################
# Object library xxhash

build examples/gguf-hash/xxhash: phony examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash/xxhash.c.o

# =============================================================================
# Object build statements for OBJECT_LIBRARY target sha1


#############################################
# Order-only phony target for sha1

build cmake_object_order_depends_target_sha1: phony || .

build examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1/sha1.c.o: C_COMPILER__sha1_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps/sha1/sha1.c || cmake_object_order_depends_target_sha1
  DEP_FILE = examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1/sha1.c.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion -w
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps
  OBJECT_DIR = examples/gguf-hash/CMakeFiles/sha1.dir
  OBJECT_FILE_DIR = examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1
  TARGET_COMPILE_PDB = examples/gguf-hash/CMakeFiles/sha1.dir/
  TARGET_PDB = ""



#############################################
# Object library sha1

build examples/gguf-hash/sha1: phony examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1/sha1.c.o

# =============================================================================
# Object build statements for OBJECT_LIBRARY target sha256


#############################################
# Order-only phony target for sha256

build cmake_object_order_depends_target_sha256: phony || .

build examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256/sha256.c.o: C_COMPILER__sha256_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps/sha256/sha256.c || cmake_object_order_depends_target_sha256
  DEP_FILE = examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256/sha256.c.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -Werror=implicit-int -Werror=implicit-function-declaration -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wdouble-promotion
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/gguf-hash/deps
  OBJECT_DIR = examples/gguf-hash/CMakeFiles/sha256.dir
  OBJECT_FILE_DIR = examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256
  TARGET_COMPILE_PDB = examples/gguf-hash/CMakeFiles/sha256.dir/
  TARGET_PDB = ""



#############################################
# Object library sha256

build examples/gguf-hash/sha256: phony examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256/sha256.c.o


#############################################
# Utility command for test

build examples/gguf-hash/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gguf-hash/test: phony examples/gguf-hash/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gguf-hash/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gguf-hash/edit_cache: phony examples/gguf-hash/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gguf-hash/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gguf-hash/rebuild_cache: phony examples/gguf-hash/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gguf-hash/list_install_components: phony


#############################################
# Utility command for install

build examples/gguf-hash/CMakeFiles/install.util: CUSTOM_COMMAND examples/gguf-hash/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gguf-hash/install: phony examples/gguf-hash/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gguf-hash/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gguf-hash/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gguf-hash/install/local: phony examples/gguf-hash/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gguf-hash/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gguf-hash/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gguf-hash/install/strip: phony examples/gguf-hash/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gguf-split


#############################################
# Order-only phony target for llama-gguf-split

build cmake_object_order_depends_target_llama-gguf-split: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/gguf-split/CMakeFiles/llama-gguf-split.dir/gguf-split.cpp.o: CXX_COMPILER__llama-gguf-split_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf-split/gguf-split.cpp || cmake_object_order_depends_target_llama-gguf-split
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/gguf-split/CMakeFiles/llama-gguf-split.dir/gguf-split.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gguf-split/CMakeFiles/llama-gguf-split.dir
  OBJECT_FILE_DIR = examples/gguf-split/CMakeFiles/llama-gguf-split.dir
  TARGET_COMPILE_PDB = examples/gguf-split/CMakeFiles/llama-gguf-split.dir/
  TARGET_PDB = bin/llama-gguf-split.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gguf-split


#############################################
# Link the executable bin/llama-gguf-split

build bin/llama-gguf-split: CXX_EXECUTABLE_LINKER__llama-gguf-split_Release examples/gguf-split/CMakeFiles/llama-gguf-split.dir/gguf-split.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gguf-split/CMakeFiles/llama-gguf-split.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gguf-split/CMakeFiles/llama-gguf-split.dir/
  TARGET_FILE = bin/llama-gguf-split
  TARGET_PDB = bin/llama-gguf-split.pdb


#############################################
# Utility command for test

build examples/gguf-split/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gguf-split/test: phony examples/gguf-split/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gguf-split/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gguf-split/edit_cache: phony examples/gguf-split/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gguf-split/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gguf-split/rebuild_cache: phony examples/gguf-split/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gguf-split/list_install_components: phony


#############################################
# Utility command for install

build examples/gguf-split/CMakeFiles/install.util: CUSTOM_COMMAND examples/gguf-split/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gguf-split/install: phony examples/gguf-split/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gguf-split/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gguf-split/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gguf-split/install/local: phony examples/gguf-split/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gguf-split/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gguf-split/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gguf-split/install/strip: phony examples/gguf-split/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gguf


#############################################
# Order-only phony target for llama-gguf

build cmake_object_order_depends_target_llama-gguf: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base

build examples/gguf/CMakeFiles/llama-gguf.dir/gguf.cpp.o: CXX_COMPILER__llama-gguf_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gguf/gguf.cpp || cmake_object_order_depends_target_llama-gguf
  DEFINES = -DGGML_SHARED
  DEP_FILE = examples/gguf/CMakeFiles/llama-gguf.dir/gguf.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gguf/CMakeFiles/llama-gguf.dir
  OBJECT_FILE_DIR = examples/gguf/CMakeFiles/llama-gguf.dir
  TARGET_COMPILE_PDB = examples/gguf/CMakeFiles/llama-gguf.dir/
  TARGET_PDB = bin/llama-gguf.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gguf


#############################################
# Link the executable bin/llama-gguf

build bin/llama-gguf: CXX_EXECUTABLE_LINKER__llama-gguf_Release examples/gguf/CMakeFiles/llama-gguf.dir/gguf.cpp.o | bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gguf/CMakeFiles/llama-gguf.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gguf/CMakeFiles/llama-gguf.dir/
  TARGET_FILE = bin/llama-gguf
  TARGET_PDB = bin/llama-gguf.pdb


#############################################
# Utility command for test

build examples/gguf/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gguf/test: phony examples/gguf/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gguf/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gguf/edit_cache: phony examples/gguf/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gguf/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gguf/rebuild_cache: phony examples/gguf/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gguf/list_install_components: phony


#############################################
# Utility command for install

build examples/gguf/CMakeFiles/install.util: CUSTOM_COMMAND examples/gguf/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gguf/install: phony examples/gguf/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gguf/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gguf/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gguf/install/local: phony examples/gguf/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gguf/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gguf/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gguf && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gguf/install/strip: phony examples/gguf/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gritlm


#############################################
# Order-only phony target for llama-gritlm

build cmake_object_order_depends_target_llama-gritlm: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/gritlm/CMakeFiles/llama-gritlm.dir/gritlm.cpp.o: CXX_COMPILER__llama-gritlm_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gritlm/gritlm.cpp || cmake_object_order_depends_target_llama-gritlm
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/gritlm/CMakeFiles/llama-gritlm.dir/gritlm.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gritlm/CMakeFiles/llama-gritlm.dir
  OBJECT_FILE_DIR = examples/gritlm/CMakeFiles/llama-gritlm.dir
  TARGET_COMPILE_PDB = examples/gritlm/CMakeFiles/llama-gritlm.dir/
  TARGET_PDB = bin/llama-gritlm.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gritlm


#############################################
# Link the executable bin/llama-gritlm

build bin/llama-gritlm: CXX_EXECUTABLE_LINKER__llama-gritlm_Release examples/gritlm/CMakeFiles/llama-gritlm.dir/gritlm.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gritlm/CMakeFiles/llama-gritlm.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gritlm/CMakeFiles/llama-gritlm.dir/
  TARGET_FILE = bin/llama-gritlm
  TARGET_PDB = bin/llama-gritlm.pdb


#############################################
# Utility command for test

build examples/gritlm/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gritlm/test: phony examples/gritlm/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gritlm/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gritlm/edit_cache: phony examples/gritlm/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gritlm/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gritlm/rebuild_cache: phony examples/gritlm/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gritlm/list_install_components: phony


#############################################
# Utility command for install

build examples/gritlm/CMakeFiles/install.util: CUSTOM_COMMAND examples/gritlm/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gritlm/install: phony examples/gritlm/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gritlm/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gritlm/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gritlm/install/local: phony examples/gritlm/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gritlm/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gritlm/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gritlm && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gritlm/install/strip: phony examples/gritlm/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-imatrix


#############################################
# Order-only phony target for llama-imatrix

build cmake_object_order_depends_target_llama-imatrix: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/imatrix/CMakeFiles/llama-imatrix.dir/imatrix.cpp.o: CXX_COMPILER__llama-imatrix_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/imatrix/imatrix.cpp || cmake_object_order_depends_target_llama-imatrix
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/imatrix/CMakeFiles/llama-imatrix.dir/imatrix.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/imatrix/CMakeFiles/llama-imatrix.dir
  OBJECT_FILE_DIR = examples/imatrix/CMakeFiles/llama-imatrix.dir
  TARGET_COMPILE_PDB = examples/imatrix/CMakeFiles/llama-imatrix.dir/
  TARGET_PDB = bin/llama-imatrix.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-imatrix


#############################################
# Link the executable bin/llama-imatrix

build bin/llama-imatrix: CXX_EXECUTABLE_LINKER__llama-imatrix_Release examples/imatrix/CMakeFiles/llama-imatrix.dir/imatrix.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/imatrix/CMakeFiles/llama-imatrix.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/imatrix/CMakeFiles/llama-imatrix.dir/
  TARGET_FILE = bin/llama-imatrix
  TARGET_PDB = bin/llama-imatrix.pdb


#############################################
# Utility command for test

build examples/imatrix/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/imatrix/test: phony examples/imatrix/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/imatrix/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/imatrix/edit_cache: phony examples/imatrix/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/imatrix/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/imatrix/rebuild_cache: phony examples/imatrix/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/imatrix/list_install_components: phony


#############################################
# Utility command for install

build examples/imatrix/CMakeFiles/install.util: CUSTOM_COMMAND examples/imatrix/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/imatrix/install: phony examples/imatrix/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/imatrix/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/imatrix/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/imatrix/install/local: phony examples/imatrix/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/imatrix/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/imatrix/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/imatrix && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/imatrix/install/strip: phony examples/imatrix/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-infill


#############################################
# Order-only phony target for llama-infill

build cmake_object_order_depends_target_llama-infill: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/infill/CMakeFiles/llama-infill.dir/infill.cpp.o: CXX_COMPILER__llama-infill_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/infill/infill.cpp || cmake_object_order_depends_target_llama-infill
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/infill/CMakeFiles/llama-infill.dir/infill.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/infill/CMakeFiles/llama-infill.dir
  OBJECT_FILE_DIR = examples/infill/CMakeFiles/llama-infill.dir
  TARGET_COMPILE_PDB = examples/infill/CMakeFiles/llama-infill.dir/
  TARGET_PDB = bin/llama-infill.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-infill


#############################################
# Link the executable bin/llama-infill

build bin/llama-infill: CXX_EXECUTABLE_LINKER__llama-infill_Release examples/infill/CMakeFiles/llama-infill.dir/infill.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/infill/CMakeFiles/llama-infill.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/infill/CMakeFiles/llama-infill.dir/
  TARGET_FILE = bin/llama-infill
  TARGET_PDB = bin/llama-infill.pdb


#############################################
# Utility command for test

build examples/infill/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/infill/test: phony examples/infill/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/infill/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/infill/edit_cache: phony examples/infill/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/infill/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/infill/rebuild_cache: phony examples/infill/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/infill/list_install_components: phony


#############################################
# Utility command for install

build examples/infill/CMakeFiles/install.util: CUSTOM_COMMAND examples/infill/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/infill/install: phony examples/infill/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/infill/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/infill/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/infill/install/local: phony examples/infill/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/infill/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/infill/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/infill && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/infill/install/strip: phony examples/infill/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-bench


#############################################
# Order-only phony target for llama-bench

build cmake_object_order_depends_target_llama-bench: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/llama-bench/CMakeFiles/llama-bench.dir/llama-bench.cpp.o: CXX_COMPILER__llama-bench_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/llama-bench/llama-bench.cpp || cmake_object_order_depends_target_llama-bench
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/llama-bench/CMakeFiles/llama-bench.dir/llama-bench.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/llama-bench/CMakeFiles/llama-bench.dir
  OBJECT_FILE_DIR = examples/llama-bench/CMakeFiles/llama-bench.dir
  TARGET_COMPILE_PDB = examples/llama-bench/CMakeFiles/llama-bench.dir/
  TARGET_PDB = bin/llama-bench.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-bench


#############################################
# Link the executable bin/llama-bench

build bin/llama-bench: CXX_EXECUTABLE_LINKER__llama-bench_Release examples/llama-bench/CMakeFiles/llama-bench.dir/llama-bench.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/llama-bench/CMakeFiles/llama-bench.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/llama-bench/CMakeFiles/llama-bench.dir/
  TARGET_FILE = bin/llama-bench
  TARGET_PDB = bin/llama-bench.pdb


#############################################
# Utility command for test

build examples/llama-bench/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/llama-bench/test: phony examples/llama-bench/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/llama-bench/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/llama-bench/edit_cache: phony examples/llama-bench/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/llama-bench/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/llama-bench/rebuild_cache: phony examples/llama-bench/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/llama-bench/list_install_components: phony


#############################################
# Utility command for install

build examples/llama-bench/CMakeFiles/install.util: CUSTOM_COMMAND examples/llama-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/llama-bench/install: phony examples/llama-bench/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/llama-bench/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/llama-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/llama-bench/install/local: phony examples/llama-bench/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/llama-bench/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/llama-bench/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/llama-bench/install/strip: phony examples/llama-bench/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-lookahead


#############################################
# Order-only phony target for llama-lookahead

build cmake_object_order_depends_target_llama-lookahead: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/lookahead/CMakeFiles/llama-lookahead.dir/lookahead.cpp.o: CXX_COMPILER__llama-lookahead_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/lookahead/lookahead.cpp || cmake_object_order_depends_target_llama-lookahead
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/lookahead/CMakeFiles/llama-lookahead.dir/lookahead.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/lookahead/CMakeFiles/llama-lookahead.dir
  OBJECT_FILE_DIR = examples/lookahead/CMakeFiles/llama-lookahead.dir
  TARGET_COMPILE_PDB = examples/lookahead/CMakeFiles/llama-lookahead.dir/
  TARGET_PDB = bin/llama-lookahead.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-lookahead


#############################################
# Link the executable bin/llama-lookahead

build bin/llama-lookahead: CXX_EXECUTABLE_LINKER__llama-lookahead_Release examples/lookahead/CMakeFiles/llama-lookahead.dir/lookahead.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/lookahead/CMakeFiles/llama-lookahead.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/lookahead/CMakeFiles/llama-lookahead.dir/
  TARGET_FILE = bin/llama-lookahead
  TARGET_PDB = bin/llama-lookahead.pdb


#############################################
# Utility command for test

build examples/lookahead/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/lookahead/test: phony examples/lookahead/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/lookahead/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/lookahead/edit_cache: phony examples/lookahead/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/lookahead/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/lookahead/rebuild_cache: phony examples/lookahead/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/lookahead/list_install_components: phony


#############################################
# Utility command for install

build examples/lookahead/CMakeFiles/install.util: CUSTOM_COMMAND examples/lookahead/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/lookahead/install: phony examples/lookahead/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/lookahead/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/lookahead/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/lookahead/install/local: phony examples/lookahead/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/lookahead/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/lookahead/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookahead && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/lookahead/install/strip: phony examples/lookahead/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-lookup


#############################################
# Order-only phony target for llama-lookup

build cmake_object_order_depends_target_llama-lookup: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/lookup/CMakeFiles/llama-lookup.dir/lookup.cpp.o: CXX_COMPILER__llama-lookup_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/lookup/lookup.cpp || cmake_object_order_depends_target_llama-lookup
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/lookup/CMakeFiles/llama-lookup.dir/lookup.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup.dir
  OBJECT_FILE_DIR = examples/lookup/CMakeFiles/llama-lookup.dir
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup.dir/
  TARGET_PDB = bin/llama-lookup.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-lookup


#############################################
# Link the executable bin/llama-lookup

build bin/llama-lookup: CXX_EXECUTABLE_LINKER__llama-lookup_Release examples/lookup/CMakeFiles/llama-lookup.dir/lookup.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup.dir/
  TARGET_FILE = bin/llama-lookup
  TARGET_PDB = bin/llama-lookup.pdb

# =============================================================================
# Object build statements for EXECUTABLE target llama-lookup-create


#############################################
# Order-only phony target for llama-lookup-create

build cmake_object_order_depends_target_llama-lookup-create: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/lookup/CMakeFiles/llama-lookup-create.dir/lookup-create.cpp.o: CXX_COMPILER__llama-lookup-create_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/lookup/lookup-create.cpp || cmake_object_order_depends_target_llama-lookup-create
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/lookup/CMakeFiles/llama-lookup-create.dir/lookup-create.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-create.dir
  OBJECT_FILE_DIR = examples/lookup/CMakeFiles/llama-lookup-create.dir
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-create.dir/
  TARGET_PDB = bin/llama-lookup-create.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-lookup-create


#############################################
# Link the executable bin/llama-lookup-create

build bin/llama-lookup-create: CXX_EXECUTABLE_LINKER__llama-lookup-create_Release examples/lookup/CMakeFiles/llama-lookup-create.dir/lookup-create.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-create.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-create.dir/
  TARGET_FILE = bin/llama-lookup-create
  TARGET_PDB = bin/llama-lookup-create.pdb

# =============================================================================
# Object build statements for EXECUTABLE target llama-lookup-merge


#############################################
# Order-only phony target for llama-lookup-merge

build cmake_object_order_depends_target_llama-lookup-merge: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/lookup/CMakeFiles/llama-lookup-merge.dir/lookup-merge.cpp.o: CXX_COMPILER__llama-lookup-merge_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/lookup/lookup-merge.cpp || cmake_object_order_depends_target_llama-lookup-merge
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/lookup/CMakeFiles/llama-lookup-merge.dir/lookup-merge.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-merge.dir
  OBJECT_FILE_DIR = examples/lookup/CMakeFiles/llama-lookup-merge.dir
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-merge.dir/
  TARGET_PDB = bin/llama-lookup-merge.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-lookup-merge


#############################################
# Link the executable bin/llama-lookup-merge

build bin/llama-lookup-merge: CXX_EXECUTABLE_LINKER__llama-lookup-merge_Release examples/lookup/CMakeFiles/llama-lookup-merge.dir/lookup-merge.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-merge.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-merge.dir/
  TARGET_FILE = bin/llama-lookup-merge
  TARGET_PDB = bin/llama-lookup-merge.pdb

# =============================================================================
# Object build statements for EXECUTABLE target llama-lookup-stats


#############################################
# Order-only phony target for llama-lookup-stats

build cmake_object_order_depends_target_llama-lookup-stats: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/lookup/CMakeFiles/llama-lookup-stats.dir/lookup-stats.cpp.o: CXX_COMPILER__llama-lookup-stats_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/lookup/lookup-stats.cpp || cmake_object_order_depends_target_llama-lookup-stats
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/lookup/CMakeFiles/llama-lookup-stats.dir/lookup-stats.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-stats.dir
  OBJECT_FILE_DIR = examples/lookup/CMakeFiles/llama-lookup-stats.dir
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-stats.dir/
  TARGET_PDB = bin/llama-lookup-stats.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-lookup-stats


#############################################
# Link the executable bin/llama-lookup-stats

build bin/llama-lookup-stats: CXX_EXECUTABLE_LINKER__llama-lookup-stats_Release examples/lookup/CMakeFiles/llama-lookup-stats.dir/lookup-stats.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/lookup/CMakeFiles/llama-lookup-stats.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/lookup/CMakeFiles/llama-lookup-stats.dir/
  TARGET_FILE = bin/llama-lookup-stats
  TARGET_PDB = bin/llama-lookup-stats.pdb


#############################################
# Utility command for test

build examples/lookup/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/lookup/test: phony examples/lookup/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/lookup/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/lookup/edit_cache: phony examples/lookup/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/lookup/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/lookup/rebuild_cache: phony examples/lookup/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/lookup/list_install_components: phony


#############################################
# Utility command for install

build examples/lookup/CMakeFiles/install.util: CUSTOM_COMMAND examples/lookup/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/lookup/install: phony examples/lookup/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/lookup/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/lookup/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/lookup/install/local: phony examples/lookup/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/lookup/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/lookup/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/lookup && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/lookup/install/strip: phony examples/lookup/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-cli


#############################################
# Order-only phony target for llama-cli

build cmake_object_order_depends_target_llama-cli: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/main/CMakeFiles/llama-cli.dir/main.cpp.o: CXX_COMPILER__llama-cli_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/main/main.cpp || cmake_object_order_depends_target_llama-cli
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/main/CMakeFiles/llama-cli.dir/main.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/main/CMakeFiles/llama-cli.dir
  OBJECT_FILE_DIR = examples/main/CMakeFiles/llama-cli.dir
  TARGET_COMPILE_PDB = examples/main/CMakeFiles/llama-cli.dir/
  TARGET_PDB = bin/llama-cli.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-cli


#############################################
# Link the executable bin/llama-cli

build bin/llama-cli: CXX_EXECUTABLE_LINKER__llama-cli_Release examples/main/CMakeFiles/llama-cli.dir/main.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/main/CMakeFiles/llama-cli.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/main/CMakeFiles/llama-cli.dir/
  TARGET_FILE = bin/llama-cli
  TARGET_PDB = bin/llama-cli.pdb


#############################################
# Utility command for test

build examples/main/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/main/test: phony examples/main/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/main/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/main/edit_cache: phony examples/main/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/main/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/main/rebuild_cache: phony examples/main/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/main/list_install_components: phony


#############################################
# Utility command for install

build examples/main/CMakeFiles/install.util: CUSTOM_COMMAND examples/main/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/main/install: phony examples/main/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/main/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/main/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/main/install/local: phony examples/main/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/main/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/main/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/main && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/main/install/strip: phony examples/main/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-parallel


#############################################
# Order-only phony target for llama-parallel

build cmake_object_order_depends_target_llama-parallel: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/parallel/CMakeFiles/llama-parallel.dir/parallel.cpp.o: CXX_COMPILER__llama-parallel_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/parallel/parallel.cpp || cmake_object_order_depends_target_llama-parallel
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/parallel/CMakeFiles/llama-parallel.dir/parallel.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/parallel/CMakeFiles/llama-parallel.dir
  OBJECT_FILE_DIR = examples/parallel/CMakeFiles/llama-parallel.dir
  TARGET_COMPILE_PDB = examples/parallel/CMakeFiles/llama-parallel.dir/
  TARGET_PDB = bin/llama-parallel.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-parallel


#############################################
# Link the executable bin/llama-parallel

build bin/llama-parallel: CXX_EXECUTABLE_LINKER__llama-parallel_Release examples/parallel/CMakeFiles/llama-parallel.dir/parallel.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/parallel/CMakeFiles/llama-parallel.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/parallel/CMakeFiles/llama-parallel.dir/
  TARGET_FILE = bin/llama-parallel
  TARGET_PDB = bin/llama-parallel.pdb


#############################################
# Utility command for test

build examples/parallel/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/parallel/test: phony examples/parallel/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/parallel/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/parallel/edit_cache: phony examples/parallel/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/parallel/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/parallel/rebuild_cache: phony examples/parallel/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/parallel/list_install_components: phony


#############################################
# Utility command for install

build examples/parallel/CMakeFiles/install.util: CUSTOM_COMMAND examples/parallel/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/parallel/install: phony examples/parallel/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/parallel/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/parallel/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/parallel/install/local: phony examples/parallel/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/parallel/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/parallel/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/parallel && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/parallel/install/strip: phony examples/parallel/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-passkey


#############################################
# Order-only phony target for llama-passkey

build cmake_object_order_depends_target_llama-passkey: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/passkey/CMakeFiles/llama-passkey.dir/passkey.cpp.o: CXX_COMPILER__llama-passkey_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/passkey/passkey.cpp || cmake_object_order_depends_target_llama-passkey
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/passkey/CMakeFiles/llama-passkey.dir/passkey.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/passkey/CMakeFiles/llama-passkey.dir
  OBJECT_FILE_DIR = examples/passkey/CMakeFiles/llama-passkey.dir
  TARGET_COMPILE_PDB = examples/passkey/CMakeFiles/llama-passkey.dir/
  TARGET_PDB = bin/llama-passkey.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-passkey


#############################################
# Link the executable bin/llama-passkey

build bin/llama-passkey: CXX_EXECUTABLE_LINKER__llama-passkey_Release examples/passkey/CMakeFiles/llama-passkey.dir/passkey.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/passkey/CMakeFiles/llama-passkey.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/passkey/CMakeFiles/llama-passkey.dir/
  TARGET_FILE = bin/llama-passkey
  TARGET_PDB = bin/llama-passkey.pdb


#############################################
# Utility command for test

build examples/passkey/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/passkey/test: phony examples/passkey/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/passkey/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/passkey/edit_cache: phony examples/passkey/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/passkey/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/passkey/rebuild_cache: phony examples/passkey/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/passkey/list_install_components: phony


#############################################
# Utility command for install

build examples/passkey/CMakeFiles/install.util: CUSTOM_COMMAND examples/passkey/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/passkey/install: phony examples/passkey/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/passkey/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/passkey/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/passkey/install/local: phony examples/passkey/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/passkey/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/passkey/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/passkey && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/passkey/install/strip: phony examples/passkey/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-perplexity


#############################################
# Order-only phony target for llama-perplexity

build cmake_object_order_depends_target_llama-perplexity: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/perplexity/CMakeFiles/llama-perplexity.dir/perplexity.cpp.o: CXX_COMPILER__llama-perplexity_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/perplexity/perplexity.cpp || cmake_object_order_depends_target_llama-perplexity
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/perplexity/CMakeFiles/llama-perplexity.dir/perplexity.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/perplexity/CMakeFiles/llama-perplexity.dir
  OBJECT_FILE_DIR = examples/perplexity/CMakeFiles/llama-perplexity.dir
  TARGET_COMPILE_PDB = examples/perplexity/CMakeFiles/llama-perplexity.dir/
  TARGET_PDB = bin/llama-perplexity.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-perplexity


#############################################
# Link the executable bin/llama-perplexity

build bin/llama-perplexity: CXX_EXECUTABLE_LINKER__llama-perplexity_Release examples/perplexity/CMakeFiles/llama-perplexity.dir/perplexity.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/perplexity/CMakeFiles/llama-perplexity.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/perplexity/CMakeFiles/llama-perplexity.dir/
  TARGET_FILE = bin/llama-perplexity
  TARGET_PDB = bin/llama-perplexity.pdb


#############################################
# Utility command for test

build examples/perplexity/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/perplexity/test: phony examples/perplexity/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/perplexity/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/perplexity/edit_cache: phony examples/perplexity/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/perplexity/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/perplexity/rebuild_cache: phony examples/perplexity/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/perplexity/list_install_components: phony


#############################################
# Utility command for install

build examples/perplexity/CMakeFiles/install.util: CUSTOM_COMMAND examples/perplexity/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/perplexity/install: phony examples/perplexity/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/perplexity/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/perplexity/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/perplexity/install/local: phony examples/perplexity/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/perplexity/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/perplexity/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/perplexity && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/perplexity/install/strip: phony examples/perplexity/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-quantize


#############################################
# Order-only phony target for llama-quantize

build cmake_object_order_depends_target_llama-quantize: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/quantize/CMakeFiles/llama-quantize.dir/quantize.cpp.o: CXX_COMPILER__llama-quantize_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/quantize/quantize.cpp || cmake_object_order_depends_target_llama-quantize
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/quantize/CMakeFiles/llama-quantize.dir/quantize.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/quantize/../../common -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/quantize/CMakeFiles/llama-quantize.dir
  OBJECT_FILE_DIR = examples/quantize/CMakeFiles/llama-quantize.dir
  TARGET_COMPILE_PDB = examples/quantize/CMakeFiles/llama-quantize.dir/
  TARGET_PDB = bin/llama-quantize.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-quantize


#############################################
# Link the executable bin/llama-quantize

build bin/llama-quantize: CXX_EXECUTABLE_LINKER__llama-quantize_Release examples/quantize/CMakeFiles/llama-quantize.dir/quantize.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/quantize/CMakeFiles/llama-quantize.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/quantize/CMakeFiles/llama-quantize.dir/
  TARGET_FILE = bin/llama-quantize
  TARGET_PDB = bin/llama-quantize.pdb


#############################################
# Utility command for test

build examples/quantize/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/quantize/test: phony examples/quantize/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/quantize/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/quantize/edit_cache: phony examples/quantize/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/quantize/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/quantize/rebuild_cache: phony examples/quantize/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/quantize/list_install_components: phony


#############################################
# Utility command for install

build examples/quantize/CMakeFiles/install.util: CUSTOM_COMMAND examples/quantize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/quantize/install: phony examples/quantize/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/quantize/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/quantize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/quantize/install/local: phony examples/quantize/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/quantize/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/quantize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/quantize && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/quantize/install/strip: phony examples/quantize/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-retrieval


#############################################
# Order-only phony target for llama-retrieval

build cmake_object_order_depends_target_llama-retrieval: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/retrieval/CMakeFiles/llama-retrieval.dir/retrieval.cpp.o: CXX_COMPILER__llama-retrieval_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/retrieval/retrieval.cpp || cmake_object_order_depends_target_llama-retrieval
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/retrieval/CMakeFiles/llama-retrieval.dir/retrieval.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/retrieval/CMakeFiles/llama-retrieval.dir
  OBJECT_FILE_DIR = examples/retrieval/CMakeFiles/llama-retrieval.dir
  TARGET_COMPILE_PDB = examples/retrieval/CMakeFiles/llama-retrieval.dir/
  TARGET_PDB = bin/llama-retrieval.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-retrieval


#############################################
# Link the executable bin/llama-retrieval

build bin/llama-retrieval: CXX_EXECUTABLE_LINKER__llama-retrieval_Release examples/retrieval/CMakeFiles/llama-retrieval.dir/retrieval.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/retrieval/CMakeFiles/llama-retrieval.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/retrieval/CMakeFiles/llama-retrieval.dir/
  TARGET_FILE = bin/llama-retrieval
  TARGET_PDB = bin/llama-retrieval.pdb


#############################################
# Utility command for test

build examples/retrieval/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/retrieval/test: phony examples/retrieval/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/retrieval/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/retrieval/edit_cache: phony examples/retrieval/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/retrieval/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/retrieval/rebuild_cache: phony examples/retrieval/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/retrieval/list_install_components: phony


#############################################
# Utility command for install

build examples/retrieval/CMakeFiles/install.util: CUSTOM_COMMAND examples/retrieval/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/retrieval/install: phony examples/retrieval/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/retrieval/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/retrieval/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/retrieval/install/local: phony examples/retrieval/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/retrieval/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/retrieval/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/retrieval && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/retrieval/install/strip: phony examples/retrieval/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-server


#############################################
# Order-only phony target for llama-server

build cmake_object_order_depends_target_llama-server: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama examples/server/index.html.gz.hpp examples/server/loading.html.hpp

build examples/server/CMakeFiles/llama-server.dir/server.cpp.o: CXX_COMPILER__llama-server_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/server/server.cpp || cmake_object_order_depends_target_llama-server
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/server/CMakeFiles/llama-server.dir/server.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/examples/server -I/Users/hertz/github_projects/llama.cpp/build/examples/server -I/Users/hertz/github_projects/llama.cpp -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/server/CMakeFiles/llama-server.dir
  OBJECT_FILE_DIR = examples/server/CMakeFiles/llama-server.dir
  TARGET_COMPILE_PDB = examples/server/CMakeFiles/llama-server.dir/
  TARGET_PDB = bin/llama-server.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-server


#############################################
# Link the executable bin/llama-server

build bin/llama-server: CXX_EXECUTABLE_LINKER__llama-server_Release examples/server/CMakeFiles/llama-server.dir/server.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/server/CMakeFiles/llama-server.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/server/CMakeFiles/llama-server.dir/
  TARGET_FILE = bin/llama-server
  TARGET_PDB = bin/llama-server.pdb


#############################################
# Utility command for test

build examples/server/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/server/test: phony examples/server/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/server/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/server/edit_cache: phony examples/server/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/server/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/server/rebuild_cache: phony examples/server/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/server/list_install_components: phony


#############################################
# Utility command for install

build examples/server/CMakeFiles/install.util: CUSTOM_COMMAND examples/server/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/server/install: phony examples/server/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/server/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/server/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/server/install/local: phony examples/server/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/server/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/server/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/server/install/strip: phony examples/server/CMakeFiles/install/strip.util


#############################################
# Custom command for examples/server/index.html.gz.hpp

build examples/server/index.html.gz.hpp | ${cmake_ninja_workdir}examples/server/index.html.gz.hpp: CUSTOM_COMMAND /Users/hertz/github_projects/llama.cpp/examples/server/public/index.html.gz || bin/libggml-base.dylib bin/libggml-blas.so bin/libggml-cpu-alderlake.so bin/libggml-cpu-haswell.so bin/libggml-cpu-icelake.so bin/libggml-cpu-sandybridge.so bin/libggml-cpu-sapphirerapids.so bin/libggml-cpu-skylakex.so bin/libggml-metal.so bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a ggml/src/ggml-cpu-alderlake-feats ggml/src/ggml-cpu-haswell-feats ggml/src/ggml-cpu-icelake-feats ggml/src/ggml-cpu-sandybridge-feats ggml/src/ggml-cpu-sapphirerapids-feats ggml/src/ggml-cpu-skylakex-feats
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake -DINPUT=/Users/hertz/github_projects/llama.cpp/examples/server/public/index.html.gz -DOUTPUT=/Users/hertz/github_projects/llama.cpp/build/examples/server/index.html.gz.hpp -P /Users/hertz/github_projects/llama.cpp/scripts/xxd.cmake
  DESC = Generating index.html.gz.hpp
  restat = 1


#############################################
# Custom command for examples/server/loading.html.hpp

build examples/server/loading.html.hpp | ${cmake_ninja_workdir}examples/server/loading.html.hpp: CUSTOM_COMMAND /Users/hertz/github_projects/llama.cpp/examples/server/public/loading.html || bin/libggml-base.dylib bin/libggml-blas.so bin/libggml-cpu-alderlake.so bin/libggml-cpu-haswell.so bin/libggml-cpu-icelake.so bin/libggml-cpu-sandybridge.so bin/libggml-cpu-sapphirerapids.so bin/libggml-cpu-skylakex.so bin/libggml-metal.so bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a ggml/src/ggml-cpu-alderlake-feats ggml/src/ggml-cpu-haswell-feats ggml/src/ggml-cpu-icelake-feats ggml/src/ggml-cpu-sandybridge-feats ggml/src/ggml-cpu-sapphirerapids-feats ggml/src/ggml-cpu-skylakex-feats
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/server && /opt/homebrew/bin/cmake -DINPUT=/Users/hertz/github_projects/llama.cpp/examples/server/public/loading.html -DOUTPUT=/Users/hertz/github_projects/llama.cpp/build/examples/server/loading.html.hpp -P /Users/hertz/github_projects/llama.cpp/scripts/xxd.cmake
  DESC = Generating loading.html.hpp
  restat = 1

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-save-load-state


#############################################
# Order-only phony target for llama-save-load-state

build cmake_object_order_depends_target_llama-save-load-state: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/save-load-state/CMakeFiles/llama-save-load-state.dir/save-load-state.cpp.o: CXX_COMPILER__llama-save-load-state_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/save-load-state/save-load-state.cpp || cmake_object_order_depends_target_llama-save-load-state
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/save-load-state/CMakeFiles/llama-save-load-state.dir/save-load-state.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/save-load-state/CMakeFiles/llama-save-load-state.dir
  OBJECT_FILE_DIR = examples/save-load-state/CMakeFiles/llama-save-load-state.dir
  TARGET_COMPILE_PDB = examples/save-load-state/CMakeFiles/llama-save-load-state.dir/
  TARGET_PDB = bin/llama-save-load-state.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-save-load-state


#############################################
# Link the executable bin/llama-save-load-state

build bin/llama-save-load-state: CXX_EXECUTABLE_LINKER__llama-save-load-state_Release examples/save-load-state/CMakeFiles/llama-save-load-state.dir/save-load-state.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/save-load-state/CMakeFiles/llama-save-load-state.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/save-load-state/CMakeFiles/llama-save-load-state.dir/
  TARGET_FILE = bin/llama-save-load-state
  TARGET_PDB = bin/llama-save-load-state.pdb


#############################################
# Utility command for test

build examples/save-load-state/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/save-load-state/test: phony examples/save-load-state/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/save-load-state/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/save-load-state/edit_cache: phony examples/save-load-state/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/save-load-state/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/save-load-state/rebuild_cache: phony examples/save-load-state/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/save-load-state/list_install_components: phony


#############################################
# Utility command for install

build examples/save-load-state/CMakeFiles/install.util: CUSTOM_COMMAND examples/save-load-state/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/save-load-state/install: phony examples/save-load-state/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/save-load-state/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/save-load-state/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/save-load-state/install/local: phony examples/save-load-state/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/save-load-state/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/save-load-state/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/save-load-state/install/strip: phony examples/save-load-state/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-run


#############################################
# Order-only phony target for llama-run

build cmake_object_order_depends_target_llama-run: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/run/CMakeFiles/llama-run.dir/run.cpp.o: CXX_COMPILER__llama-run_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/run/run.cpp || cmake_object_order_depends_target_llama-run
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/run/CMakeFiles/llama-run.dir/run.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/run/CMakeFiles/llama-run.dir
  OBJECT_FILE_DIR = examples/run/CMakeFiles/llama-run.dir
  TARGET_COMPILE_PDB = examples/run/CMakeFiles/llama-run.dir/
  TARGET_PDB = bin/llama-run.pdb

build examples/run/CMakeFiles/llama-run.dir/linenoise.cpp/linenoise.cpp.o: CXX_COMPILER__llama-run_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/run/linenoise.cpp/linenoise.cpp || cmake_object_order_depends_target_llama-run
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/run/CMakeFiles/llama-run.dir/linenoise.cpp/linenoise.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/run/CMakeFiles/llama-run.dir
  OBJECT_FILE_DIR = examples/run/CMakeFiles/llama-run.dir/linenoise.cpp
  TARGET_COMPILE_PDB = examples/run/CMakeFiles/llama-run.dir/
  TARGET_PDB = bin/llama-run.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-run


#############################################
# Link the executable bin/llama-run

build bin/llama-run: CXX_EXECUTABLE_LINKER__llama-run_Release examples/run/CMakeFiles/llama-run.dir/run.cpp.o examples/run/CMakeFiles/llama-run.dir/linenoise.cpp/linenoise.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/run/CMakeFiles/llama-run.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/run/CMakeFiles/llama-run.dir/
  TARGET_FILE = bin/llama-run
  TARGET_PDB = bin/llama-run.pdb


#############################################
# Utility command for test

build examples/run/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/run/test: phony examples/run/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/run/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/run/edit_cache: phony examples/run/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/run/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/run/rebuild_cache: phony examples/run/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/run/list_install_components: phony


#############################################
# Utility command for install

build examples/run/CMakeFiles/install.util: CUSTOM_COMMAND examples/run/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/run/install: phony examples/run/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/run/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/run/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/run/install/local: phony examples/run/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/run/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/run/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/run && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/run/install/strip: phony examples/run/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-simple


#############################################
# Order-only phony target for llama-simple

build cmake_object_order_depends_target_llama-simple: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/simple/CMakeFiles/llama-simple.dir/simple.cpp.o: CXX_COMPILER__llama-simple_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/simple/simple.cpp || cmake_object_order_depends_target_llama-simple
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/simple/CMakeFiles/llama-simple.dir/simple.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/simple/CMakeFiles/llama-simple.dir
  OBJECT_FILE_DIR = examples/simple/CMakeFiles/llama-simple.dir
  TARGET_COMPILE_PDB = examples/simple/CMakeFiles/llama-simple.dir/
  TARGET_PDB = bin/llama-simple.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-simple


#############################################
# Link the executable bin/llama-simple

build bin/llama-simple: CXX_EXECUTABLE_LINKER__llama-simple_Release examples/simple/CMakeFiles/llama-simple.dir/simple.cpp.o | bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/simple/CMakeFiles/llama-simple.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/simple/CMakeFiles/llama-simple.dir/
  TARGET_FILE = bin/llama-simple
  TARGET_PDB = bin/llama-simple.pdb


#############################################
# Utility command for test

build examples/simple/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/simple/test: phony examples/simple/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/simple/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/simple/edit_cache: phony examples/simple/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/simple/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/simple/rebuild_cache: phony examples/simple/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/simple/list_install_components: phony


#############################################
# Utility command for install

build examples/simple/CMakeFiles/install.util: CUSTOM_COMMAND examples/simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/simple/install: phony examples/simple/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/simple/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/simple/install/local: phony examples/simple/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/simple/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/simple/install/strip: phony examples/simple/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-simple-chat


#############################################
# Order-only phony target for llama-simple-chat

build cmake_object_order_depends_target_llama-simple-chat: phony || cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/simple-chat/CMakeFiles/llama-simple-chat.dir/simple-chat.cpp.o: CXX_COMPILER__llama-simple-chat_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/simple-chat/simple-chat.cpp || cmake_object_order_depends_target_llama-simple-chat
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/simple-chat/CMakeFiles/llama-simple-chat.dir/simple-chat.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/simple-chat/CMakeFiles/llama-simple-chat.dir
  OBJECT_FILE_DIR = examples/simple-chat/CMakeFiles/llama-simple-chat.dir
  TARGET_COMPILE_PDB = examples/simple-chat/CMakeFiles/llama-simple-chat.dir/
  TARGET_PDB = bin/llama-simple-chat.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-simple-chat


#############################################
# Link the executable bin/llama-simple-chat

build bin/llama-simple-chat: CXX_EXECUTABLE_LINKER__llama-simple-chat_Release examples/simple-chat/CMakeFiles/llama-simple-chat.dir/simple-chat.cpp.o | bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/simple-chat/CMakeFiles/llama-simple-chat.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/simple-chat/CMakeFiles/llama-simple-chat.dir/
  TARGET_FILE = bin/llama-simple-chat
  TARGET_PDB = bin/llama-simple-chat.pdb


#############################################
# Utility command for test

build examples/simple-chat/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/simple-chat/test: phony examples/simple-chat/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/simple-chat/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/simple-chat/edit_cache: phony examples/simple-chat/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/simple-chat/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/simple-chat/rebuild_cache: phony examples/simple-chat/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/simple-chat/list_install_components: phony


#############################################
# Utility command for install

build examples/simple-chat/CMakeFiles/install.util: CUSTOM_COMMAND examples/simple-chat/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/simple-chat/install: phony examples/simple-chat/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/simple-chat/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/simple-chat/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/simple-chat/install/local: phony examples/simple-chat/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/simple-chat/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/simple-chat/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/simple-chat/install/strip: phony examples/simple-chat/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-speculative


#############################################
# Order-only phony target for llama-speculative

build cmake_object_order_depends_target_llama-speculative: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/speculative/CMakeFiles/llama-speculative.dir/speculative.cpp.o: CXX_COMPILER__llama-speculative_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/speculative/speculative.cpp || cmake_object_order_depends_target_llama-speculative
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/speculative/CMakeFiles/llama-speculative.dir/speculative.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/speculative/CMakeFiles/llama-speculative.dir
  OBJECT_FILE_DIR = examples/speculative/CMakeFiles/llama-speculative.dir
  TARGET_COMPILE_PDB = examples/speculative/CMakeFiles/llama-speculative.dir/
  TARGET_PDB = bin/llama-speculative.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-speculative


#############################################
# Link the executable bin/llama-speculative

build bin/llama-speculative: CXX_EXECUTABLE_LINKER__llama-speculative_Release examples/speculative/CMakeFiles/llama-speculative.dir/speculative.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/speculative/CMakeFiles/llama-speculative.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/speculative/CMakeFiles/llama-speculative.dir/
  TARGET_FILE = bin/llama-speculative
  TARGET_PDB = bin/llama-speculative.pdb


#############################################
# Utility command for test

build examples/speculative/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/speculative/test: phony examples/speculative/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/speculative/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/speculative/edit_cache: phony examples/speculative/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/speculative/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/speculative/rebuild_cache: phony examples/speculative/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/speculative/list_install_components: phony


#############################################
# Utility command for install

build examples/speculative/CMakeFiles/install.util: CUSTOM_COMMAND examples/speculative/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/speculative/install: phony examples/speculative/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/speculative/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/speculative/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/speculative/install/local: phony examples/speculative/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/speculative/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/speculative/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/speculative/install/strip: phony examples/speculative/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-speculative-simple


#############################################
# Order-only phony target for llama-speculative-simple

build cmake_object_order_depends_target_llama-speculative-simple: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/speculative-simple.cpp.o: CXX_COMPILER__llama-speculative-simple_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/speculative-simple/speculative-simple.cpp || cmake_object_order_depends_target_llama-speculative-simple
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/speculative-simple.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir
  OBJECT_FILE_DIR = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir
  TARGET_COMPILE_PDB = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/
  TARGET_PDB = bin/llama-speculative-simple.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-speculative-simple


#############################################
# Link the executable bin/llama-speculative-simple

build bin/llama-speculative-simple: CXX_EXECUTABLE_LINKER__llama-speculative-simple_Release examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/speculative-simple.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/
  TARGET_FILE = bin/llama-speculative-simple
  TARGET_PDB = bin/llama-speculative-simple.pdb


#############################################
# Utility command for test

build examples/speculative-simple/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/speculative-simple/test: phony examples/speculative-simple/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/speculative-simple/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/speculative-simple/edit_cache: phony examples/speculative-simple/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/speculative-simple/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/speculative-simple/rebuild_cache: phony examples/speculative-simple/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/speculative-simple/list_install_components: phony


#############################################
# Utility command for install

build examples/speculative-simple/CMakeFiles/install.util: CUSTOM_COMMAND examples/speculative-simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/speculative-simple/install: phony examples/speculative-simple/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/speculative-simple/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/speculative-simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/speculative-simple/install/local: phony examples/speculative-simple/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/speculative-simple/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/speculative-simple/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/speculative-simple/install/strip: phony examples/speculative-simple/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-tokenize


#############################################
# Order-only phony target for llama-tokenize

build cmake_object_order_depends_target_llama-tokenize: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/tokenize/CMakeFiles/llama-tokenize.dir/tokenize.cpp.o: CXX_COMPILER__llama-tokenize_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/tokenize/tokenize.cpp || cmake_object_order_depends_target_llama-tokenize
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/tokenize/CMakeFiles/llama-tokenize.dir/tokenize.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/tokenize/CMakeFiles/llama-tokenize.dir
  OBJECT_FILE_DIR = examples/tokenize/CMakeFiles/llama-tokenize.dir
  TARGET_COMPILE_PDB = examples/tokenize/CMakeFiles/llama-tokenize.dir/
  TARGET_PDB = bin/llama-tokenize.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-tokenize


#############################################
# Link the executable bin/llama-tokenize

build bin/llama-tokenize: CXX_EXECUTABLE_LINKER__llama-tokenize_Release examples/tokenize/CMakeFiles/llama-tokenize.dir/tokenize.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/tokenize/CMakeFiles/llama-tokenize.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/tokenize/CMakeFiles/llama-tokenize.dir/
  TARGET_FILE = bin/llama-tokenize
  TARGET_PDB = bin/llama-tokenize.pdb


#############################################
# Utility command for test

build examples/tokenize/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/tokenize/test: phony examples/tokenize/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/tokenize/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/tokenize/edit_cache: phony examples/tokenize/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/tokenize/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/tokenize/rebuild_cache: phony examples/tokenize/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/tokenize/list_install_components: phony


#############################################
# Utility command for install

build examples/tokenize/CMakeFiles/install.util: CUSTOM_COMMAND examples/tokenize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/tokenize/install: phony examples/tokenize/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/tokenize/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/tokenize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/tokenize/install/local: phony examples/tokenize/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/tokenize/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/tokenize/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tokenize && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/tokenize/install/strip: phony examples/tokenize/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-tts


#############################################
# Order-only phony target for llama-tts

build cmake_object_order_depends_target_llama-tts: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/tts/CMakeFiles/llama-tts.dir/tts.cpp.o: CXX_COMPILER__llama-tts_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/tts/tts.cpp || cmake_object_order_depends_target_llama-tts
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/tts/CMakeFiles/llama-tts.dir/tts.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include -I/Users/hertz/github_projects/llama.cpp/common/.
  OBJECT_DIR = examples/tts/CMakeFiles/llama-tts.dir
  OBJECT_FILE_DIR = examples/tts/CMakeFiles/llama-tts.dir
  TARGET_COMPILE_PDB = examples/tts/CMakeFiles/llama-tts.dir/
  TARGET_PDB = bin/llama-tts.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-tts


#############################################
# Link the executable bin/llama-tts

build bin/llama-tts: CXX_EXECUTABLE_LINKER__llama-tts_Release examples/tts/CMakeFiles/llama-tts.dir/tts.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/tts/CMakeFiles/llama-tts.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/tts/CMakeFiles/llama-tts.dir/
  TARGET_FILE = bin/llama-tts
  TARGET_PDB = bin/llama-tts.pdb


#############################################
# Utility command for test

build examples/tts/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/tts/test: phony examples/tts/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/tts/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/tts/edit_cache: phony examples/tts/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/tts/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/tts/rebuild_cache: phony examples/tts/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/tts/list_install_components: phony


#############################################
# Utility command for install

build examples/tts/CMakeFiles/install.util: CUSTOM_COMMAND examples/tts/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/tts/install: phony examples/tts/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/tts/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/tts/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/tts/install/local: phony examples/tts/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/tts/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/tts/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/tts && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/tts/install/strip: phony examples/tts/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target llama-gen-docs


#############################################
# Order-only phony target for llama-gen-docs

build cmake_object_order_depends_target_llama-gen-docs: phony || cmake_object_order_depends_target_build_info cmake_object_order_depends_target_common cmake_object_order_depends_target_ggml cmake_object_order_depends_target_ggml-base cmake_object_order_depends_target_llama

build examples/gen-docs/CMakeFiles/llama-gen-docs.dir/gen-docs.cpp.o: CXX_COMPILER__llama-gen-docs_unscanned_Release /Users/hertz/github_projects/llama.cpp/examples/gen-docs/gen-docs.cpp || cmake_object_order_depends_target_llama-gen-docs
  DEFINES = -DGGML_SHARED -DLLAMA_SHARED
  DEP_FILE = examples/gen-docs/CMakeFiles/llama-gen-docs.dir/gen-docs.cpp.o.d
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7 -Wmissing-declarations -Wmissing-noreturn -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wunreachable-code-break -Wunreachable-code-return -Wmissing-prototypes -Wextra-semi
  INCLUDES = -I/Users/hertz/github_projects/llama.cpp/examples -I/Users/hertz/github_projects/llama.cpp/common/. -I/Users/hertz/github_projects/llama.cpp/src/. -I/Users/hertz/github_projects/llama.cpp/src/../include -I/Users/hertz/github_projects/llama.cpp/src/../common -I/Users/hertz/github_projects/llama.cpp/ggml/src/../include
  OBJECT_DIR = examples/gen-docs/CMakeFiles/llama-gen-docs.dir
  OBJECT_FILE_DIR = examples/gen-docs/CMakeFiles/llama-gen-docs.dir
  TARGET_COMPILE_PDB = examples/gen-docs/CMakeFiles/llama-gen-docs.dir/
  TARGET_PDB = bin/llama-gen-docs.pdb


# =============================================================================
# Link build statements for EXECUTABLE target llama-gen-docs


#############################################
# Link the executable bin/llama-gen-docs

build bin/llama-gen-docs: CXX_EXECUTABLE_LINKER__llama-gen-docs_Release examples/gen-docs/CMakeFiles/llama-gen-docs.dir/gen-docs.cpp.o | common/libcommon.a bin/libllama.dylib bin/libggml.dylib bin/libggml-base.dylib || bin/libggml-base.dylib bin/libggml.dylib bin/libllama.dylib common/build_info common/libcommon.a
  FLAGS = -O3 -DNDEBUG -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk -mmacosx-version-min=14.7
  LINK_FLAGS = -L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/flex/lib
  LINK_LIBRARIES = -Wl,-rpath,/Users/hertz/github_projects/llama.cpp/build/bin  common/libcommon.a  bin/libllama.dylib  bin/libggml.dylib  bin/libggml-base.dylib
  OBJECT_DIR = examples/gen-docs/CMakeFiles/llama-gen-docs.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_COMPILE_PDB = examples/gen-docs/CMakeFiles/llama-gen-docs.dir/
  TARGET_FILE = bin/llama-gen-docs
  TARGET_PDB = bin/llama-gen-docs.pdb


#############################################
# Utility command for test

build examples/gen-docs/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build examples/gen-docs/test: phony examples/gen-docs/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build examples/gen-docs/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build examples/gen-docs/edit_cache: phony examples/gen-docs/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build examples/gen-docs/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build examples/gen-docs/rebuild_cache: phony examples/gen-docs/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build examples/gen-docs/list_install_components: phony


#############################################
# Utility command for install

build examples/gen-docs/CMakeFiles/install.util: CUSTOM_COMMAND examples/gen-docs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build examples/gen-docs/install: phony examples/gen-docs/CMakeFiles/install.util


#############################################
# Utility command for install/local

build examples/gen-docs/CMakeFiles/install/local.util: CUSTOM_COMMAND examples/gen-docs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build examples/gen-docs/install/local: phony examples/gen-docs/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build examples/gen-docs/CMakeFiles/install/strip.util: CUSTOM_COMMAND examples/gen-docs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build examples/gen-docs/install/strip: phony examples/gen-docs/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /Users/hertz/github_projects/llama.cpp/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for test

build pocs/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/ctest --force-new-ctest-process
  DESC = Running tests...
  pool = console
  restat = 1

build pocs/test: phony pocs/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build pocs/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/ccmake -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build pocs/edit_cache: phony pocs/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build pocs/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/hertz/github_projects/llama.cpp -B/Users/hertz/github_projects/llama.cpp/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build pocs/rebuild_cache: phony pocs/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build pocs/list_install_components: phony


#############################################
# Utility command for install

build pocs/CMakeFiles/install.util: CUSTOM_COMMAND pocs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build pocs/install: phony pocs/CMakeFiles/install.util


#############################################
# Utility command for install/local

build pocs/CMakeFiles/install/local.util: CUSTOM_COMMAND pocs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build pocs/install/local: phony pocs/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build pocs/CMakeFiles/install/strip.util: CUSTOM_COMMAND pocs/all
  COMMAND = cd /Users/hertz/github_projects/llama.cpp/build/pocs && /opt/homebrew/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build pocs/install/strip: phony pocs/CMakeFiles/install/strip.util

# =============================================================================
# Target aliases.

build build_info: phony common/build_info

build common: phony common/libcommon.a

build ggml: phony bin/libggml.dylib

build ggml-base: phony bin/libggml-base.dylib

build ggml-blas: phony bin/libggml-blas.so

build ggml-cpu-alderlake: phony bin/libggml-cpu-alderlake.so

build ggml-cpu-alderlake-feats: phony ggml/src/ggml-cpu-alderlake-feats

build ggml-cpu-haswell: phony bin/libggml-cpu-haswell.so

build ggml-cpu-haswell-feats: phony ggml/src/ggml-cpu-haswell-feats

build ggml-cpu-icelake: phony bin/libggml-cpu-icelake.so

build ggml-cpu-icelake-feats: phony ggml/src/ggml-cpu-icelake-feats

build ggml-cpu-sandybridge: phony bin/libggml-cpu-sandybridge.so

build ggml-cpu-sandybridge-feats: phony ggml/src/ggml-cpu-sandybridge-feats

build ggml-cpu-sapphirerapids: phony bin/libggml-cpu-sapphirerapids.so

build ggml-cpu-sapphirerapids-feats: phony ggml/src/ggml-cpu-sapphirerapids-feats

build ggml-cpu-skylakex: phony bin/libggml-cpu-skylakex.so

build ggml-cpu-skylakex-feats: phony ggml/src/ggml-cpu-skylakex-feats

build ggml-metal: phony bin/libggml-metal.so

build libcommon.a: phony common/libcommon.a

build libggml-base.dylib: phony bin/libggml-base.dylib

build libggml-blas.so: phony bin/libggml-blas.so

build libggml-cpu-alderlake.so: phony bin/libggml-cpu-alderlake.so

build libggml-cpu-haswell.so: phony bin/libggml-cpu-haswell.so

build libggml-cpu-icelake.so: phony bin/libggml-cpu-icelake.so

build libggml-cpu-sandybridge.so: phony bin/libggml-cpu-sandybridge.so

build libggml-cpu-sapphirerapids.so: phony bin/libggml-cpu-sapphirerapids.so

build libggml-cpu-skylakex.so: phony bin/libggml-cpu-skylakex.so

build libggml-metal.so: phony bin/libggml-metal.so

build libggml.dylib: phony bin/libggml.dylib

build libllama.dylib: phony bin/libllama.dylib

build llama: phony bin/libllama.dylib

build llama-batched: phony bin/llama-batched

build llama-batched-bench: phony bin/llama-batched-bench

build llama-bench: phony bin/llama-bench

build llama-cli: phony bin/llama-cli

build llama-embedding: phony bin/llama-embedding

build llama-eval-callback: phony bin/llama-eval-callback

build llama-gbnf-validator: phony bin/llama-gbnf-validator

build llama-gen-docs: phony bin/llama-gen-docs

build llama-gguf: phony bin/llama-gguf

build llama-gguf-hash: phony bin/llama-gguf-hash

build llama-gguf-split: phony bin/llama-gguf-split

build llama-gritlm: phony bin/llama-gritlm

build llama-imatrix: phony bin/llama-imatrix

build llama-infill: phony bin/llama-infill

build llama-lookahead: phony bin/llama-lookahead

build llama-lookup: phony bin/llama-lookup

build llama-lookup-create: phony bin/llama-lookup-create

build llama-lookup-merge: phony bin/llama-lookup-merge

build llama-lookup-stats: phony bin/llama-lookup-stats

build llama-parallel: phony bin/llama-parallel

build llama-passkey: phony bin/llama-passkey

build llama-perplexity: phony bin/llama-perplexity

build llama-quantize: phony bin/llama-quantize

build llama-retrieval: phony bin/llama-retrieval

build llama-run: phony bin/llama-run

build llama-save-load-state: phony bin/llama-save-load-state

build llama-server: phony bin/llama-server

build llama-simple: phony bin/llama-simple

build llama-simple-chat: phony bin/llama-simple-chat

build llama-speculative: phony bin/llama-speculative

build llama-speculative-simple: phony bin/llama-speculative-simple

build llama-tokenize: phony bin/llama-tokenize

build llama-tts: phony bin/llama-tts

build sha1: phony examples/gguf-hash/sha1

build sha256: phony examples/gguf-hash/sha256

build test-arg-parser: phony bin/test-arg-parser

build test-autorelease: phony bin/test-autorelease

build test-backend-ops: phony bin/test-backend-ops

build test-c: phony bin/test-c

build test-chat: phony bin/test-chat

build test-chat-template: phony bin/test-chat-template

build test-gguf: phony bin/test-gguf

build test-grammar-integration: phony bin/test-grammar-integration

build test-grammar-parser: phony bin/test-grammar-parser

build test-json-schema-to-grammar: phony bin/test-json-schema-to-grammar

build test-llama-grammar: phony bin/test-llama-grammar

build test-log: phony bin/test-log

build test-model-load-cancel: phony bin/test-model-load-cancel

build test-sampling: phony bin/test-sampling

build test-tokenizer-0: phony bin/test-tokenizer-0

build test-tokenizer-1-bpe: phony bin/test-tokenizer-1-bpe

build test-tokenizer-1-spm: phony bin/test-tokenizer-1-spm

build xxhash: phony examples/gguf-hash/xxhash

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build

build all: phony ggml/all src/all common/all tests/all examples/all pocs/all

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/common

build common/all: phony common/build_info common/libcommon.a

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples

build examples/all: phony examples/batched-bench/all examples/batched/all examples/embedding/all examples/eval-callback/all examples/gbnf-validator/all examples/gguf-hash/all examples/gguf-split/all examples/gguf/all examples/gritlm/all examples/imatrix/all examples/infill/all examples/llama-bench/all examples/lookahead/all examples/lookup/all examples/main/all examples/parallel/all examples/passkey/all examples/perplexity/all examples/quantize/all examples/retrieval/all examples/server/all examples/save-load-state/all examples/run/all examples/simple/all examples/simple-chat/all examples/speculative/all examples/speculative-simple/all examples/tokenize/all examples/tts/all examples/gen-docs/all

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/batched

build examples/batched/all: phony bin/llama-batched

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/batched-bench

build examples/batched-bench/all: phony bin/llama-batched-bench

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/embedding

build examples/embedding/all: phony bin/llama-embedding

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/eval-callback

build examples/eval-callback/all: phony bin/llama-eval-callback

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gbnf-validator

build examples/gbnf-validator/all: phony bin/llama-gbnf-validator

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gen-docs

build examples/gen-docs/all: phony bin/llama-gen-docs

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gguf

build examples/gguf/all: phony bin/llama-gguf

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gguf-hash

build examples/gguf-hash/all: phony bin/llama-gguf-hash examples/gguf-hash/xxhash examples/gguf-hash/sha1 examples/gguf-hash/sha256

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gguf-split

build examples/gguf-split/all: phony bin/llama-gguf-split

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/gritlm

build examples/gritlm/all: phony bin/llama-gritlm

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/imatrix

build examples/imatrix/all: phony bin/llama-imatrix

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/infill

build examples/infill/all: phony bin/llama-infill

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/llama-bench

build examples/llama-bench/all: phony bin/llama-bench

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/lookahead

build examples/lookahead/all: phony bin/llama-lookahead

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/lookup

build examples/lookup/all: phony bin/llama-lookup bin/llama-lookup-create bin/llama-lookup-merge bin/llama-lookup-stats

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/main

build examples/main/all: phony bin/llama-cli

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/parallel

build examples/parallel/all: phony bin/llama-parallel

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/passkey

build examples/passkey/all: phony bin/llama-passkey

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/perplexity

build examples/perplexity/all: phony bin/llama-perplexity

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/quantize

build examples/quantize/all: phony bin/llama-quantize

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/retrieval

build examples/retrieval/all: phony bin/llama-retrieval

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/run

build examples/run/all: phony bin/llama-run

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/save-load-state

build examples/save-load-state/all: phony bin/llama-save-load-state

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/server

build examples/server/all: phony bin/llama-server

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/simple

build examples/simple/all: phony bin/llama-simple

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/simple-chat

build examples/simple-chat/all: phony bin/llama-simple-chat

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/speculative

build examples/speculative/all: phony bin/llama-speculative

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/speculative-simple

build examples/speculative-simple/all: phony bin/llama-speculative-simple

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/tokenize

build examples/tokenize/all: phony bin/llama-tokenize

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/examples/tts

build examples/tts/all: phony bin/llama-tts

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/ggml

build ggml/all: phony ggml/src/all

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/ggml/src

build ggml/src/all: phony bin/libggml-base.dylib bin/libggml.dylib bin/libggml-cpu-sandybridge.so ggml/src/ggml-cpu-sandybridge-feats bin/libggml-cpu-haswell.so ggml/src/ggml-cpu-haswell-feats bin/libggml-cpu-skylakex.so ggml/src/ggml-cpu-skylakex-feats bin/libggml-cpu-icelake.so ggml/src/ggml-cpu-icelake-feats bin/libggml-cpu-alderlake.so ggml/src/ggml-cpu-alderlake-feats bin/libggml-cpu-sapphirerapids.so ggml/src/ggml-cpu-sapphirerapids-feats ggml/src/ggml-cpu/all ggml/src/ggml-blas/all ggml/src/ggml-metal/all

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-blas

build ggml/src/ggml-blas/all: phony bin/libggml-blas.so

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-cpu

build ggml/src/ggml-cpu/all: phony

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/ggml/src/ggml-metal

build ggml/src/ggml-metal/all: phony bin/libggml-metal.so

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/pocs

build pocs/all: phony

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/src

build src/all: phony bin/libllama.dylib

# =============================================================================

#############################################
# Folder: /Users/hertz/github_projects/llama.cpp/build/tests

build tests/all: phony bin/test-tokenizer-0 bin/test-sampling bin/test-grammar-parser bin/test-grammar-integration bin/test-llama-grammar bin/test-chat bin/test-json-schema-to-grammar bin/test-tokenizer-1-bpe bin/test-tokenizer-1-spm bin/test-log bin/test-arg-parser bin/test-chat-template bin/test-gguf bin/test-backend-ops bin/test-model-load-cancel bin/test-autorelease bin/test-c

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /Users/hertz/github_projects/llama.cpp/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/cmake/build-info.cmake /Users/hertz/github_projects/llama.cpp/cmake/common.cmake /Users/hertz/github_projects/llama.cpp/cmake/git-vars.cmake /Users/hertz/github_projects/llama.cpp/cmake/llama-config.cmake.in /Users/hertz/github_projects/llama.cpp/cmake/llama.pc.in /Users/hertz/github_projects/llama.cpp/common/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/batched-bench/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/batched/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/embedding/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/eval-callback/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gbnf-validator/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gen-docs/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf-split/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gritlm/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/imatrix/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/infill/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/llama-bench/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/lookahead/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/lookup/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/main/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/parallel/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/passkey/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/perplexity/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/quantize/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/retrieval/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/run/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/save-load-state/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/server/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/simple-chat/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/simple/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/speculative-simple/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/speculative/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/tokenize/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/tts/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/cmake/ggml-config.cmake.in /Users/hertz/github_projects/llama.cpp/ggml/src/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-blas/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-common.h /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal-impl.h /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal.metal /Users/hertz/github_projects/llama.cpp/pocs/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/src/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/tests/CMakeLists.txt /opt/homebrew/share/cmake/Modules/BasicConfigVersion-SameMajorVersion.cmake.in /opt/homebrew/share/cmake/Modules/CMakeASMCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeASMInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c /opt/homebrew/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCXXCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp /opt/homebrew/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake /opt/homebrew/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/share/cmake/Modules/CMakeCompilerIdDetection.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineASMCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerSupport.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeFindBinUtils.cmake /opt/homebrew/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeNinjaFindMake.cmake /opt/homebrew/share/cmake/Modules/CMakePackageConfigHelpers.cmake /opt/homebrew/share/cmake/Modules/CMakeParseArguments.cmake /opt/homebrew/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake /opt/homebrew/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake /opt/homebrew/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake /opt/homebrew/share/cmake/Modules/CMakeSystem.cmake.in /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/share/cmake/Modules/CMakeTestASMCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCompilerCommon.cmake /opt/homebrew/share/cmake/Modules/CTest.cmake /opt/homebrew/share/cmake/Modules/CTestTargets.cmake /opt/homebrew/share/cmake/Modules/CTestUseLaunchers.cmake /opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/CheckCXXCompilerFlag.cmake /opt/homebrew/share/cmake/Modules/CheckCXXSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake /opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake /opt/homebrew/share/cmake/Modules/CheckIncludeFileCXX.cmake /opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake /opt/homebrew/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-ASM.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-C.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-CXX-CXXImportStd.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-CXX.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/share/cmake/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/CrayClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/share/cmake/Modules/Compiler/HP-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/LCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/OrangeC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TIClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XL-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/zOS-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/DartConfiguration.tcl.in /opt/homebrew/share/cmake/Modules/FindBLAS.cmake /opt/homebrew/share/cmake/Modules/FindGit.cmake /opt/homebrew/share/cmake/Modules/FindOpenMP.cmake /opt/homebrew/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /opt/homebrew/share/cmake/Modules/FindPackageMessage.cmake /opt/homebrew/share/cmake/Modules/FindThreads.cmake /opt/homebrew/share/cmake/Modules/GNUInstallDirs.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeASMLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCXXLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckFlagCommonConfig.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/Internal/FeatureTesting.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-CXX.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Determine-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/UnixPaths.cmake /opt/homebrew/share/cmake/Modules/WriteBasicConfigVersionFile.cmake CMakeCache.txt CMakeFiles/3.31.5/CMakeASMCompiler.cmake CMakeFiles/3.31.5/CMakeCCompiler.cmake CMakeFiles/3.31.5/CMakeCXXCompiler.cmake CMakeFiles/3.31.5/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /Users/hertz/github_projects/llama.cpp/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/cmake/build-info.cmake /Users/hertz/github_projects/llama.cpp/cmake/common.cmake /Users/hertz/github_projects/llama.cpp/cmake/git-vars.cmake /Users/hertz/github_projects/llama.cpp/cmake/llama-config.cmake.in /Users/hertz/github_projects/llama.cpp/cmake/llama.pc.in /Users/hertz/github_projects/llama.cpp/common/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/batched-bench/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/batched/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/embedding/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/eval-callback/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gbnf-validator/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gen-docs/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf-hash/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf-split/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gguf/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/gritlm/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/imatrix/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/infill/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/llama-bench/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/lookahead/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/lookup/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/main/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/parallel/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/passkey/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/perplexity/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/quantize/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/retrieval/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/run/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/save-load-state/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/server/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/simple-chat/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/simple/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/speculative-simple/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/speculative/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/tokenize/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/examples/tts/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/cmake/ggml-config.cmake.in /Users/hertz/github_projects/llama.cpp/ggml/src/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-blas/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-common.h /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-cpu/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal-impl.h /Users/hertz/github_projects/llama.cpp/ggml/src/ggml-metal/ggml-metal.metal /Users/hertz/github_projects/llama.cpp/pocs/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/src/CMakeLists.txt /Users/hertz/github_projects/llama.cpp/tests/CMakeLists.txt /opt/homebrew/share/cmake/Modules/BasicConfigVersion-SameMajorVersion.cmake.in /opt/homebrew/share/cmake/Modules/CMakeASMCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeASMInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c /opt/homebrew/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCXXCompiler.cmake.in /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp /opt/homebrew/share/cmake/Modules/CMakeCXXInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake /opt/homebrew/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/share/cmake/Modules/CMakeCompilerIdDetection.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineASMCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerSupport.cmake /opt/homebrew/share/cmake/Modules/CMakeDetermineSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeFindBinUtils.cmake /opt/homebrew/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeNinjaFindMake.cmake /opt/homebrew/share/cmake/Modules/CMakePackageConfigHelpers.cmake /opt/homebrew/share/cmake/Modules/CMakeParseArguments.cmake /opt/homebrew/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake /opt/homebrew/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake /opt/homebrew/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake /opt/homebrew/share/cmake/Modules/CMakeSystem.cmake.in /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/share/cmake/Modules/CMakeTestASMCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake /opt/homebrew/share/cmake/Modules/CMakeTestCompilerCommon.cmake /opt/homebrew/share/cmake/Modules/CTest.cmake /opt/homebrew/share/cmake/Modules/CTestTargets.cmake /opt/homebrew/share/cmake/Modules/CTestUseLaunchers.cmake /opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/CheckCXXCompilerFlag.cmake /opt/homebrew/share/cmake/Modules/CheckCXXSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake /opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake /opt/homebrew/share/cmake/Modules/CheckIncludeFileCXX.cmake /opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake /opt/homebrew/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-ASM.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-C.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-CXX-CXXImportStd.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-CXX.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang-FindBinUtils.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/share/cmake/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/CrayClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/share/cmake/Modules/Compiler/HP-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/LCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/OrangeC-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TIClang-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XL-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/zOS-C-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /opt/homebrew/share/cmake/Modules/DartConfiguration.tcl.in /opt/homebrew/share/cmake/Modules/FindBLAS.cmake /opt/homebrew/share/cmake/Modules/FindGit.cmake /opt/homebrew/share/cmake/Modules/FindOpenMP.cmake /opt/homebrew/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /opt/homebrew/share/cmake/Modules/FindPackageMessage.cmake /opt/homebrew/share/cmake/Modules/FindThreads.cmake /opt/homebrew/share/cmake/Modules/GNUInstallDirs.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeASMLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCXXLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckFlagCommonConfig.cmake /opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake /opt/homebrew/share/cmake/Modules/Internal/FeatureTesting.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-CXX.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Determine-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-ASM.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-CXX.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/UnixPaths.cmake /opt/homebrew/share/cmake/Modules/WriteBasicConfigVersionFile.cmake CMakeCache.txt CMakeFiles/3.31.5/CMakeASMCompiler.cmake CMakeFiles/3.31.5/CMakeCCompiler.cmake CMakeFiles/3.31.5/CMakeCXXCompiler.cmake CMakeFiles/3.31.5/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
